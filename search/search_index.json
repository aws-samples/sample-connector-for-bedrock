{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sample Connector for Bedrock","text":"<p>Integrating AWS Generative AI is now easy!</p> <p>Start with the link below:</p> <ul> <li> <p>Quick start</p> </li> <li> <p>Deploy using Cloudformation</p> </li> <li> <p>Development</p> </li> </ul>"},{"location":"home/","title":"Introduction","text":"<p>This project is an Amazon Bedrock and other large language model or application forwarding tool. It can manage virtual API Keys, record chat logs, and manage costs.</p> <p>It is compatible with any OpenAI client that can define a Host and API key.</p>"},{"location":"home/#main-features","title":"Main Features","text":""},{"location":"home/#supported-models-and-platforms","title":"Supported Models and Platforms","text":"<ul> <li>Supports all current and future large language models from Bedrock (supported through bedrock-converse).</li> <li>Supports models deployed through Sagemaker LMI (partial models).</li> <li>Supports other forms of custom models, including Ollama, etc.</li> <li>More AI workflow applications, such as internet search, AWS command executors, etc.</li> </ul>"},{"location":"home/#api-key-and-cost-management","title":"API Key and Cost Management","text":"<ul> <li>Create API keys. Keys can be created for regular users and administrators. Regular users can chat, while administrators can manage API keys and costs.</li> <li>Record the cost of each call and use it as a basis for cost control.</li> <li>Cost control. You can set monthly quotas and account balances for each API key. When the monthly quota or account balance is insufficient, it cannot be used.</li> <li>Calculate the overall cost.</li> </ul> <p>You can customize model prices. Please refer to the official website for the Bedrock pricing.</p> <p>Warning</p> <p>The cost calculation of this project cannot be used as the basis for AWS billing. Please refer to the AWS bill for actual expenses.</p> <p></p>"},{"location":"home/#model-management","title":"Model Management","text":"<p>Models and their parameters can be defined from the backend. See Models management</p> <p>Once defined, models can be bound to groups or API Keys.</p> <p></p>"},{"location":"home/changelogs/","title":"Changelogs","text":""},{"location":"home/changelogs/#0027","title":"0.0.27","text":"<ol> <li>New Provider: sagemaker-deepseek - Added a new provider for DeepSeek R1 models deployed on SageMaker. This provider supports streaming output with Deepseek-style <code>reasoning_content</code>. Currently supports three deployment methods on SageMaker: LMI, JumpStart, and Bedrock. Refer to the documentation.</li> </ol>"},{"location":"home/changelogs/#0026","title":"0.0.26","text":"<ol> <li> <p>Enhancement: bedrock-converse Tool Calls - The bedrock-converse provider now outputs the <code>tool_calls</code> content field, supporting tool use with langchain.ChatOpenAI requests.</p> </li> <li> <p>Improvement: Consistent Message IDs - Streaming responses now include consistent message IDs across all chunks within a single request.</p> </li> </ol>"},{"location":"home/changelogs/#0025","title":"0.0.25","text":"<ol> <li> <p>Feature: Claude Sonnet 3.7 Thinking/Reasoning Support - Added support for thinking/reasoning capabilities with Claude Sonnet 3.7 on the bedrock-converse provider. For more details, refer to the documentation.</p> </li> <li> <p>Bugfix: Deepseek Format Reasoning Content - Fixed support for reasoning content in deepseek format within the built-in BRClient.</p> </li> <li> <p>Standardization: sagemaker-lmi finish_reason Value - Modified the <code>finish_reason</code> value in the sagemaker-lmi provider to consistently return \u201cstop\u201d.</p> </li> </ol>"},{"location":"home/changelogs/#0024","title":"0.0.24","text":"<ol> <li> <p>Bugfix: sagemaker-lmi finish_reason Output - This update addresses an issue where the <code>finish_reason</code> output from the sagemaker-lmi provider was returning an empty string. Now, it will correctly output a non-empty string, providing accurate information about the completion status.</p> </li> <li> <p>Feature: Display Model Reasoning in BRClient - Enhanced BRConnector to support and display the <code>reasoning_content</code> field from the new API, which shows the model\u2019s step-by-step reasoning process. This update allows the frontend to properly recognize and render the model\u2019s thought process in a think block format.</p> </li> </ol>"},{"location":"home/changelogs/#0023","title":"0.0.23","text":"<ol> <li>New Provider: bedrock-deepseek \u2013 Added support for DeepSeek models deployed on Amazon Bedrock. This provider supports Think tags which are rendered as markdown blockquotes in the output. Detail.</li> </ol>"},{"location":"home/changelogs/#0022","title":"0.0.22","text":"<ol> <li> <p>API Update: titan_embeddings \u2013 Updated the embeddings API to follow OpenAI-compatible format. The API now accepts both single string and array inputs through <code>/v1/embeddings</code> endpoint. Detail.</p> </li> <li> <p>Function-Calling Format Update: bedrock-converse \u2013 Changed the function-calling arguments parameter type from JSON to string to align with OpenAI\u2019s format. Updated all related providers to ensure compatibility.</p> </li> <li> <p>Auto-login Feature for BRClient: Added an automatic login mechanism. If a user named <code>__shared-api-key__</code> exists in the backend, the <code>/portal-for-brclient.html</code> entry point will automatically configure both the URL and key for BRClient. Note: This feature is intended for internal company use only. If <code>__shared-api-key__</code> does not exist, only the API URL will be set, and the key must be manually configured in BRClient.</p> </li> </ol>"},{"location":"home/changelogs/#0021","title":"0.0.21","text":"<ol> <li>New Provider: openai-compatible \u2013 This provider is designed to integrate APIs of models compatible with the OpenAI chat schema (tested with: deepseek, Doudao/Volcano platform, Qwen/Alibaba). Detail.</li> <li>New Provider: smart-router \u2013 This provider analyzes the semantics of user input and selects an appropriate model to query.  Detail.</li> <li>New Model Configuration Mechanism: You can now configure a custom model to adapt to all models provided by a specific model provider. Detail.</li> <li>Bugfix: Corrected the cache loading logic, which previously caused a program crash upon the first run of BRConnector.</li> <li>Headers Value Pass-through in sagemaker-lmi Provider: Now, values in the headers are URL-encoded and included in the <code>CustomAttributes</code> tag of the SageMaker SDK.</li> <li>BRClient Update to Version 1.2.5: Key updates include:    - In AKSK mode, users can now customize the Bedrock endpoint.    - Fixed a bug where pressing Enter in Chinese input methods would send the message immediately.</li> </ol>"},{"location":"home/changelogs/#0020","title":"0.0.20","text":"<ol> <li>Fixed the representation of boolean types in environment variables. Now only \u201cfalse\u201d and \u201c0\u201d are considered as false.</li> <li>Added support for nova-canvas in the painter plugin (text-to-image only).</li> <li>Collapsed the display of operation buttons in the API key list.</li> <li>Modified the data type of the index in the output result choices to integer.</li> <li>Added a new Provider: nova-canvas, which allows image manipulation through natural language (including the following tools: text-to-image, image-to-image, foreground replacement/inpaint, background replacement/outpaint, background removal, variations, and color guidance). https://aws-samples.github.io/sample-connector-for-bedrock/zh/providers/nova-canvas/</li> </ol>"},{"location":"home/changelogs/#0019","title":"0.0.19","text":"<ol> <li>Fixed a critical bug: log file handles were filling up the system, causing it to become unresponsive after a period of time.</li> <li>Rewrote the logging system, aiming to unify the format as much as possible.</li> </ol>"},{"location":"home/changelogs/#0018","title":"0.0.18","text":"<ol> <li>Added model and API key queries to the backend management web interface.</li> <li>Added configuration for the Amazon Nova models in NoDB mode. As the Nova models are relatively new and only available in certain regions, please note to use them in conjunction with the AWS_DEFAULT_REGION environment variable.</li> <li>The nova model has been added to the initialization script in the database, but it will only take effect in the newly created databases of BRConnector.</li> <li>Fixed a backend error that attempted to save database data even in NoDB mode.</li> <li>Changed the output type of \u2018id\u2019 from number to string during streaming output, now it can be correctly deserialized by aider.</li> <li>Added support for the embedding API, now it can adapt to the titan embeddings model. You need to configure a new model using the titan_embeddings Provider, and use the API (/v1/embeddings) to call it.</li> </ol>"},{"location":"home/changelogs/#0017","title":"0.0.17","text":"<ol> <li>When the client actively stops output, the application now actively closes the server-side response.</li> <li>Cost control now works correctly.</li> </ol>"},{"location":"home/changelogs/#0016","title":"0.0.16","text":"<ol> <li>Added a new configuration option for bedrock-converse: maxTokens</li> </ol>"},{"location":"home/changelogs/#0015","title":"0.0.15","text":"<ol> <li> <p>Added haiku 3.5 model in NoDB mode.</p> </li> <li> <p>Removed some unnecessary log outputs.</p> </li> </ol>"},{"location":"home/changelogs/#0014","title":"0.0.14","text":"<ol> <li>Added caching mechanism, with the following details:</li> </ol> <ul> <li> <p>If the system does not configure environment variables PGSQL_HOST or PGSQL_DATABASE, BRConnector will switch to pass-through mode. In this mode, only the ADMIN_API_KEY environment variable can be used to access models, and only built-in static models can be accessed (default LLM models supported by Bedrock Converse; if new models are released in the future, BRConnector code needs to be updated).</p> </li> <li> <p>If a database is configured and the PERFORMANCE_MODE environment variable is set, custom models and API Keys configured in the database will take effect. These two parts of data will be loaded directly into memory (up to 2000 entries, refreshed every 1 minute, significantly reducing database access). In this case, BRConnector will only verify if the API Key is valid, without checking if the API Key has permission to access a specific model. It will no longer save conversation records or track and control costs.</p> </li> </ul> <ol> <li> <p>Fixed a Dify access bug. Issue #43</p> </li> <li> <p>For Feishu webhook, added multi-turn dialogue, image recognition, and document recognition features.</p> </li> <li> <p>Added optional configurations for NoDB,  PERFORMANCE_MODE in CloudFormation.</p> </li> <li> <p>Upgraded the aws-lambda-adapter image for Lambda to version 0.8.4. The new adapter version resolves conflicts with the Authorization Header in IAM_Auth for Lambda function URLs.</p> </li> <li> <p>Optimized CloudFormation Output, now showing clear endpoints.</p> </li> </ol>"},{"location":"home/changelogs/#0013","title":"0.0.13","text":"<ol> <li> <p>New Feature: Introduced a webhook mechanism for easy integration with third-party applications.</p> </li> <li> <p>New Webhook: Feishu, allowing BRConnector integration into Feishu through configuration.</p> </li> <li> <p>New Plugin: continue-coder, enabling BRConnector configuration in Continue for code generation.</p> </li> <li> <p>New Models Support: The painter plugin now supports the latest bedrock SD models: <code>stability.stable-image-core-v1:0</code>, <code>stability.sd3-large-v1:0</code>, and <code>stability.stable-image-ultra-v1:0</code>.</p> </li> <li> <p>Deployment Script Upgrade: Added a permission configuration, now correctly calling cross-region model profiles.</p> </li> <li> <p>Improvement: Added an API key query API, allowing precise matching by name, group_id, and role.</p> </li> <li> <p>Improvement: Default model support: Now a model named \u2018default\u2019 can respond to any model name. If not defined, an error message will be output.</p> </li> <li> <p>Refactored parts of the code and added a standard API: <code>/v1/completions</code>, to support continue-coder. Currently, only bedrock-coverse and continue-coder have implemented this API.</p> </li> <li> <p>Upgraded the underlying AWS SDK dependency to 3.645.0 and fixed various other bugs.</p> </li> </ol>"},{"location":"home/changelogs/#0012","title":"0.0.12","text":"<ol> <li>New provider: urls-reader, which can parse URLs in user conversations and download the text content from the URLs to add to the conversation context.</li> <li>Optimized the painter provider, now supporting the Titan image model. The large language model has been changed to BRConnector\u2019s local model.</li> <li>It is now possible to delete models, groups, and API Keys in the manager interface.</li> <li>Bug fix: Automatic update script for CloudFormation EC2.</li> </ol>"},{"location":"home/deployment/","title":"Quick Deployment","text":"<p>Use CloudFormation for quick deployment.</p>"},{"location":"home/deployment/#supported-region","title":"Supported Region","text":"<p>Cloudformation template are verified in following regions:</p> <ul> <li>us-east-1</li> <li>us-west-2</li> </ul>"},{"location":"home/deployment/#prerequisites","title":"Prerequisites","text":"<p>Enable Claude 3 Sonnet or Haiku in your region - If you are new to using Anthropic models, go to the\u00a0Amazon Bedrock console\u00a0and choose\u00a0Model access\u00a0on the bottom left pane. Request access separately for Claude 3 Sonnet or Haiku.</p>"},{"location":"home/deployment/#components","title":"Components","text":"<p>Following key components will be included in this Cloudformation template:</p> <ul> <li>Cloudfront</li> <li>BRConnector on Lambda or EC2</li> <li>RDS PostgreSQL or PostgreSQL container on EC2 or without database</li> <li>ECR with pull through cache enabled</li> </ul>"},{"location":"home/deployment/#deploy-patterns","title":"Deploy Patterns","text":"<p>Here are some recommend deployment patterns:</p> <ul> <li>Deploy BRConnector on EC2 with integrated database, put Cloudfront in front of EC2</li> <li>Deploy BRConnector on Lambda with standalone database (or no database), put Cloudfront  in front of public Lambda function URL</li> <li>Deploy BRConnector on Lambda with standalone database (or no database), put Cloudfront  in front of Lambda function URL with AWS_IAM authorization type</li> <li></li> </ul>"},{"location":"home/deployment/#deploy-guide","title":"Deploy Guide","text":"<ul> <li>(Option) If you need lambda function URL with AWS_IAM auth type, deploy lambda@edge at us-east-1 region for Cloudfront viewer request. After deploy successfully, get lambda version ARN from outputs page. </li> </ul> <ul> <li>Deploy BRConnector in any supported region. Download quick-build-brconnector.yaml and upload to Cloudformation console or click this button to launch directly.</li> </ul> <ul> <li>VPC parameters</li> <li>Choose to create a new VPC or a existing VPC</li> <li>Choose one PUBLIC subnet for EC2 and two PRIVATE subnets for Lambda and RDS (subnet group need 2 AZ at least)</li> </ul> <ul> <li>Compute parameters</li> <li>Choose ComputeType for BRConnector, Lambda or EC2</li> <li>For EC2 settings<ul> <li>Now only support Amazon Linux 2023</li> <li>You could choose to create PostgreSQL as container in same EC2 (DatabaseMode to <code>EC2Integrated</code>), or create standalone RDS PostgreSQL as backend (DatabaseMode to <code>Standalone</code>)</li> </ul> </li> <li>For Lambda settings<ul> <li><code>EcrRepo</code> Define your private repository name prefix string</li> <li><code>LambdaArch</code> Define using arm64 or amd64 for your lambda architecture</li> <li>PUBLIC Function URL will be used if <code>LambdaEdgeVersionArn</code> is NULL. Please ensure this security setting is acceptable</li> <li>And you could choose to create RDS PostgreSQL (DatabaseMode to <code>Standalone</code>) or without database (DatabaseMode to <code>NoDB</code>)</li> </ul> </li> </ul> <ul> <li>PostgreSQL parameters</li> <li>DatabaseMode choose:<ul> <li><code>EC2Integrated</code> \u2013 Deploy PostgreSQL container in EC2</li> <li><code>Standalone</code> \u2013 Deploy RDS PostgreSQL</li> <li><code>NoDB</code> \u2013 Do not deploy any backend database, in this mode only ADMIN KEY could access default models</li> </ul> </li> <li>Set PerformanceMode to true, chat history will not be saved.</li> <li>Default PostgreSQL password is <code>mysecretpassword</code></li> </ul> <ul> <li>Debugging parameters</li> <li>If you choose Lambda as ComputeType, you could choose to delete EC2 after all resources deploy successfully. This EC2 is used for compiling and building BRConnector container temporarily.</li> <li>Don\u2019t delete EC2 if you choose EC2 as ComputeType</li> <li>If you set <code>true</code> to AutoUpdateBRConnector, one script will be add to ec2 crontab</li> </ul> <ul> <li>Until deploy successfully, go to output page and copy Cloudfront URL and first user key to your bedrock client settings page.</li> </ul> <ul> <li>Also you could connect to <code>BRConnector</code> EC2 instance with SSM Session Manager (docs)</li> </ul>"},{"location":"home/deployment/#update-brconnector","title":"Update BRConnector","text":""},{"location":"home/deployment/#autoupdate-is-true","title":"AutoUpdate is true","text":"<ul> <li>Check your ECR settings, if has rules in pull through cache page, you have enabled this feature to update ECR image with upstream repo automatically.</li> <li>Go to codebuild page, one project will be triggered to build regularly to update your lambda image automatically</li> <li>Images in EC2 will be updated using state manager in SSM automatically.</li> </ul>"},{"location":"home/deployment/#autoupdate-is-false","title":"AutoUpdate is false","text":"<ul> <li>Check your ECR settings, if has rules in pull through cache page, you have enabled this feature to update ECR image with upstream repo automatically.</li> <li>Go to codebuild page, one project could be triggered to update your lambda image manually. Click <code>Start build</code> to update lambda image.</li> <li>Images in EC2 will NOT be updated using state manager in SSM automatically due to no association created. Reference document in SSM to execute commands in EC2 manually.</li> </ul>"},{"location":"home/deployment/#ecr-without-pull-through-cache-enabled-only-for-previous-cfn-version","title":"ECR without pull through cache enabled (only for previous cfn version)","text":"<ul> <li>following this script to update image manually if you do not enable ECR pull through cache</li> </ul> <pre><code>export AWS_DEFAULT_REGION=us-west-2\nexport ACCOUNT_ID=00000000000000\nexport PrivateECRRepository=your_private_repo_name\n\naws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com\n\n# pull/tag/push arm64 image for lambda\ndocker pull --platform=linux/arm64 public.ecr.aws/x6u9o2u4/sample-connector-for-bedrock-lambda\ndocker tag public.ecr.aws/x6u9o2u4/sample-connector-for-bedrock-lambda ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64\ndocker push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64\n\n# pull/tag/push amd64 image for lambda\ndocker pull --platform=linux/amd64 public.ecr.aws/x6u9o2u4/sample-connector-for-bedrock-lambda\ndocker tag public.ecr.aws/x6u9o2u4/sample-connector-for-bedrock-lambda ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64\ndocker push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64\n\n# create/push manifest file\ndocker manifest create ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest --amend ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64 --amend ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64\ndocker manifest annotate ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64 --os linux --arch arm64\ndocker manifest annotate ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64 --os linux --arch amd64\ndocker manifest push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest\n</code></pre> <ul> <li>update lambda image with correct architecture</li> </ul>"},{"location":"home/deployment/#brconnector-on-ec2","title":"BRConnector on EC2","text":"<ul> <li>login to ec2 to update local image and restart brconnector container</li> </ul> <pre><code>aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws\ndocker pull public.ecr.aws/x6u9o2u4/sample-connector-for-bedrock\ndocker rm -f brconnector\ncat /var/log/cloud-init-output.log |egrep -o 'docker run .* --name brconnector .*' |sh\n</code></pre>"},{"location":"home/deployment/#migrating-to-new-postgresql-database","title":"Migrating to new PostgreSQL database","text":"<p>You could choose to deploy PostgreSQL in container on ECR or in RDS directly, here list some command for your reference to migrate your data in PG.</p>"},{"location":"home/deployment/#migrating-brconnector-data-from-pg-container-on-ec2-to-rds","title":"Migrating BRConnector data from PG container on EC2 to RDS","text":"<ul> <li> <p>list your database name <pre><code>docker exec -it postgres psql -U postgres\npostgres=&gt; \\l # list databases\npostgres=&gt;\n</code></pre></p> </li> <li> <p>dump full db  <pre><code>docker exec -i postgres pg_dump -U postgres -d brproxy_dbname &gt; db.sql\n</code></pre></p> </li> <li> <p>Find your PG endpoint in RDS</p> </li> <li> <p>we will run a docker on your local as postgres client temporarily, instead of install postgresql <pre><code>POSTGRES_VERSION=16\ndocker run --name postgres-client \\\n    -e POSTGRES_PASSWORD=postgres-client-tmp-password \\\n    -d postgres:${POSTGRES_VERSION}\n</code></pre></p> </li> <li> <p>copy full db sql to container\u2019s /tmp folder <pre><code>docker cp db.sql postgres-client:/tmp/\n</code></pre></p> </li> <li> <p>create target database in RDS and import data <pre><code>docker exec -it postgres-client sh \n#\n# psql -U postgres -h pg-endpoint.xxx.us-west-2.rds.amazonaws.com \nPassword for user postgres:\npostgres=&gt; CREATE DATABASE brconnector_db;\npostgres=&gt; ^D\n# psql -U postgres -h pg-endpoint.xxx.us-west-2.rds.amazonaws.com -d brconnector_db &lt;/tmp/db.sql\nPassword for user postgres:\n# \n</code></pre></p> </li> <li>clean temporary docker on local <pre><code>docker rm -f postgres-client\n</code></pre></li> </ul>"},{"location":"home/faq/","title":"FAQ","text":""},{"location":"home/faq/#how-to-support-documents-in-chat","title":"How to support documents in chat","text":"<p>Please note: Document uploads are currently only supported in Claude 3.</p> <p>The API declaration for uploading documents is as follows:</p> <pre><code>POST /v1/chat/completions\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"messages\":[{\n    \"role\":\"user\",\n    \"content\":[\n      {\"type\":\"text\",\"text\":\"Summary this doc\"},\n      {\n        \"type\":\"doc\",\n        \"doc\":{\n          \"name\":\"4147b64a76039b4b75264726ebf6143f9e132b1e\",\n          \"format\":\"pdf\",\"size\":59368,\n          \"source\":{\n            \"bytes\":{\n              \"0\":37,\"1\":80,\"2\":68,\"3\":70,\"4\":45,\"5\":49,...,\"59367\":70\n            }\n          }\n        }\n      }\n    ]\n  }],\n  \"stream\":true,\n  \"model\":\"claude-sonnet-3\"\n  ,\"temperature\":0.5,\n  \"presence_penalty\":0,\n  \"frequency_penalty\":0,\n  \"top_p\":1,\n  \"max_tokens\":4000\n}\n</code></pre>"},{"location":"home/faq/#how-to-configure-default-model-support","title":"How to Configure Default Model Support?","text":"<p>You just need to create a new model named <code>default</code>.</p>"},{"location":"home/faq/#can-you-draw-diagrams","title":"Can You Draw Diagrams?","text":"<p>Yes, you can draw diagrams by configuring and using models with providers such as <code>painter</code> or <code>nova-canvas</code>.</p>"},{"location":"home/faq/#model-wildcard","title":"Model Wildcard","text":"<p>You can now configure a custom model and use slashes in the model name within API calls.</p> <p>Here is an example of an API call:</p> <pre><code>POST {{baseURL}}/chat/completions\nAuthorization: Bearer {{key}}\nContent-Type: application/json\n\n{\n    \"model\": \"bedrock/us.amazon.nova-micro-v1:0\",\n    \"messages\": [\n        {\n            \"role\": \"user\",\n            \"content\": \"Tell me a joke that only programmers would understand\"\n        }\n    ],\n    \"max_tokens\": 5120,\n    \"stream\": true\n}\n</code></pre> <p>To use this method, you must:</p> <ol> <li>Configure a custom model with the model name <code>bedrock</code> in the backend.</li> <li>The model name after the slash can be customized but must match the original vendor\u2019s model name.</li> <li>The provider will prioritize the model name after the slash, then consider the model name configured in the backend, and finally fall back to the original name if necessary.</li> </ol> <p>Currently, providers that support this usage include: <code>bedrock_converse</code>, <code>openai_compatiable</code>.</p>"},{"location":"home/quick-start/","title":"Quick start","text":""},{"location":"home/quick-start/#1-prepare-a-server-to-host-the-connector","title":"1. Prepare a server to host the connector","text":"<p>Launch an EC2 on AWS or any other server with docker support.</p>"},{"location":"home/quick-start/#2-run-postgres-with-docker","title":"2. Run Postgres with docker","text":"<p>Launch a docker container to host postgres with the following shell command. Please use your own password to repalce <code>XXX</code>:</p> <pre><code>docker run --name postgres \\\n  -e POSTGRES_PASSWORD=XXX \\\n  -p 5432:5432 \\\n  -d postgres\n</code></pre> <p>Then create a database named <code>brconnector_db</code> with the following command.</p> <p>At first, attach to the prostgress container:</p> <pre><code>docker exec -it postgres psql -U postgres\n</code></pre> <p>Then, in the SQL command line of postgres, run the following command to create the database:</p> <pre><code>CREATE DATABASE brconnector_db;\n</code></pre> <p>The database name is not necessary to be <code>brconnector_db</code>, you can use what ever valid database name you want.</p> <p>If you use your own database name, make sure that you remember the database name and replace <code>brconnector_db</code> with your database name.</p>"},{"location":"home/quick-start/#3-start-the-connector-server-with-docker","title":"3. Start the connector server with docker","text":"<p>Run the following docker command directly to start the connector container.</p> <p>Make sure to replace the value of access key, secret key, region to be right ones.</p> <p>And, important! replace the value of ADMIN_API_KEY to be a complex key instead of using the simple one in the sample.</p> <pre><code>docker run --name brconnector \\\n --restart always --pull always \\\n -p 8866:8866 \\\n -e AWS_ACCESS_KEY_ID=xxxx \\\n -e AWS_SECRET_ACCESS_KEY=xxxxx \\\n -e AWS_DEFAULT_REGION=us-east-1 \\\n -e PGSQL_HOST=172.17.0.1 \\\n -e PGSQL_DATABASE=brconnector_db \\\n -e PGSQL_USER=postgres \\\n -e PGSQL_PASSWORD=mysecretpassword \\\n -e ADMIN_API_KEY=br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \\\n -d cloudbeer/sample-connector-for-bedrock\n</code></pre>"},{"location":"home/quick-start/#4-test-the-connector-server","title":"4. Test the connector server","text":"<p>Now, you have the first admin user with the API_KEY \u201cbr_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\u201d.</p> <p>And the server export port 8866 to the hosting EC2.</p> <p>Test the server with the API_Key using <code>curl</code> command:</p> <pre><code>curl \"http://localhost:8866/admin/api-key/list\" \\\n  -H \"Authorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" \n</code></pre> <p>You will get something like the following if every things go well:</p> <pre><code>{\"success\":true,\"data\":{\"items\":[],\"total\":\"0\",\"limit\":20,\"offset\":0}}\n</code></pre>"},{"location":"home/quick-start/#5-creat-the-first-admin-user","title":"5. Creat the first admin user","text":"<p>The API_KEY configed above is only used for booting the server and create first admin user.</p> <p>This API_KEY is not designed to be used as admin user or normal user.</p> <p>Create the first admin user with the following command:</p> <pre><code>curl -X POST \"http://localhost:8866/admin/api-key/apply\" \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" \\\n     -d '{\"name\": \"adminuser\",\"group_id\": 1,\"role\": \"admin\",\"email\": \"\", \"month_quota\":\"20\"}'\n</code></pre> <p>You will get some response like the following:</p> <pre><code>{\"success\":true,\"data\":{\"id\":1,\"name\":\"adminuser\",\"email\":\"\",\"api_key\":\"br-someotherkeyvaluexxxxx\",\"role\":\"admin\",\"month_quota\":\"20.0000000000\",\"balance\":\"0.0000000000\"}}\n</code></pre> <p>Record the new api_key for the new user, this api_key can be used to config your client to chat. and this api_key can be used to login the connector\u2019s manager WebUI to manage other api_key.</p>"},{"location":"home/quick-start/#6-config-client-to-connect-to-the-connector-server","title":"6. Config client to connect to the connector server","text":"<p>You should expose the connector server with HTTPS.</p> <p>One simple way to do it on AWS is creating a CloudFront CDN to provide SSL support.</p> <p>For more information about setting up CloudFront on AWS, please refer to official document of AWS.</p> <p>Open a client that can define Host and API Key for OpenAI.</p> <p>In Host field enter the CloudFront url.</p> <p>In the \u201cAPK Key\u201d field, enter the API_Key of your first admin user, which is the one you created in step 5.</p> <p>Then, open a new chat to test.</p> <p>If every thing goes well, you can start to chat.</p> <p>Note</p> <p>You can use the sample client provided by https://github.com/aws-samples/sample-client-for-amazon-bedrock to test this project, View how to config.</p> <p>Since 0.0.8, this client has been built into the docker image. The access address is: <code>http(s)://your-endpoint/brclient/</code></p>"},{"location":"home/quick-start/#7-the-connectors-webui","title":"7. The connector\u2019s WebUI","text":"<p>If you have not set the environment variable DISABLE_UI, you can now access the BRConnector WebUI via https://your-endpoint/manager.</p> <p>You can log in and manage it using the API key you just generated. Enter https://your-endpoint as the Host.</p>"},{"location":"providers/aws-executor/","title":"aws-executor","text":"<p>Since Docker image version 0.0.10</p> <p>An AWS command executor.</p> <p>With this Provider, you can execute AWS command using natural language and get the execution results.</p> <p>The role for executing AWS commands and the role for running BRConnector are currently the same, so you need to grant the appropriate permissions to the current role.</p> <p>Warning</p> <p>Do not grant write permissions to critical resources, as the command lines parsed by the current AI are not stable. However, you can still refer to the command lines suggested by the AI.</p>"},{"location":"providers/aws-executor/#model-configuration","title":"Model configuration","text":"<p>The parameter configuration is as follows:</p> <p>Name: some-model</p> <p>Provider: aws-executor</p> <p>Configuration:</p> <pre><code>{\n  \"localLlmModel\": \"claude-3-sonnet\"\n}\n</code></pre> <p>localLlmModel must be configured as a model that supports function calling and already exists in BRConnector.</p> <p>Note</p> <p>You need to configure a claude3+ model provided by the bedrock-converse provider, as other models do not yet have the capability for function calling. The early default claude3 model in the system is not driven by converse. If you use these models, you need to update the original configuration to the bedrock-converse provider. Please note to modify the key \u2018model_id\u2019 to \u2018modelId\u2019.</p> <p>And You must install aws cli v2 in the BRConnector host.</p>"},{"location":"providers/aws-executor/#screenshots-in-brclient","title":"Screenshots in BRClient","text":""},{"location":"providers/bedrock-converse/","title":"bedrock-converse","text":"<p>Since Docker image version 0.0.6</p> <p>LLM Consistent Interface.</p> <p>Sends messages to the specified Amazon Bedrock model.\u00a0<code>Converse</code>\u00a0provides a consistent interface that works with all models that support messages. This allows you to write code once and use it with different models. If a model has unique inference parameters, you can also pass those unique parameters to the model.</p>"},{"location":"providers/bedrock-converse/#configuration","title":"Configuration","text":"<p>Invoke model via Amazon Bedrock Converse API. You can config all supported models with this provider.</p> <p>This page explains how to use Bedrock Converse API, and what features it supports.</p> <p>It is recommended to use this provider, which can uniformly configure Bedrock models and support function calling.</p> Key Type Required Default value Description modelId string Y Model id, See Bedrock doc regions string[] or string N [\u201cus-east-1\u201d] If you have applied and specified multiple regions, then a region will be randomly selected for the call. This feature can effectively alleviate performance bottlenecks. maxTokens number N 1024 The default maximum number of tokens, corresponding to the max_tokens parameter in the standard API. If not specified in the API, this value will be used. thinking boolean N false Whether to enable the reason/think functionality thinkBudget number N 1024 When thinking is enabled, the maximum number of tokens allowed for the reasoning part <p>The configuration example:</p> <pre><code>{\n  \"modelId\": \"us.anthropic.claude-3-7-sonnet-20250219-v1:0\",\n  \"regions\": [\n    \"us-east-1\"\n  ],\n  \"thinking\": true,\n  \"maxTokens\": 64000,\n  \"thinkBudget\": 32000\n}\n</code></pre>"},{"location":"providers/bedrock-converse/#output-results","title":"Output Results","text":"<p>The output adds a reasoning_content field, consistent with deepseek\u2019s output.</p> <pre><code>data: {\"id\":\"3\",\"created\":1740468210,\"object\":\"text_completion\",\"choices\":[{\"index\":0,\"delta\":{\"role\":\"assistant\",\"content\":\"\",\"reasoning_content\":\"hello\"},\"finish_reason\":null,\"logprobs\":null}],\"model\":\"sonnet37-think\"}\n...\n</code></pre>"},{"location":"providers/bedrock-deepseek/","title":"bedrock-deepseek","text":"<p>Since Docker image version 0.0.23</p> <p>LLM Consistent Interface.</p> <p>Sends messages to DeepSeek models deployed on Amazon Bedrock. This provider supports Think tags which are rendered as markdown blockquotes in the output.</p>"},{"location":"providers/bedrock-deepseek/#configuration","title":"Configuration","text":"<p>Invoke DeepSeek model via Amazon Bedrock API. This provider allows you to configure and use DeepSeek models deployed on Bedrock.</p> Key Type Required Default value Description modelId string Y Model ARN for the deployed DeepSeek model regions string[] or string N [\u201cus-east-1\u201d] If you have applied and specified multiple regions, then a region will be randomly selected for the call. This feature can effectively alleviate performance bottlenecks. maxTokens number N 8192 The default maximum number of tokens, corresponding to the max_tokens parameter in the standard API. If not specified in the API, this value will be used. <p>The configuration example:</p> <pre><code>{\n  \"modelId\": \"arn:aws:sagemaker:region:xxxxx:endpoint/ds-endpoint\",\n  \"regions\": [\n    \"us-west-2\"\n  ],\n  \"maxTokens\": 8192\n}\n</code></pre>"},{"location":"providers/bedrock-knowledge-base/","title":"bedrock-knowledge-base","text":"<p>Knowledge Bases for Amazon Bedrock.</p>"},{"location":"providers/bedrock-knowledge-base/#create-a-knowledge-bases-for-bedrock-instance","title":"Create a Knowledge Bases for Bedrock instance","text":"<p>Refer to this document: Create a knowledge base</p>"},{"location":"providers/bedrock-knowledge-base/#model-configuration","title":"Model Configuration","text":"<pre><code>{\n  \"region\": \"&lt;your-region&gt;\",\n  \"summaryModel\": \"claude-3-sonnet\",\n  \"knowledgeBaseId\": \"&lt;your-kb-id&gt;\"\n}\n</code></pre> <ul> <li>knowledgeBaseId: the knowledge base id.</li> <li>summaryModel: support claude-3-sonnet, claude-3-haiku or claude-3-opus</li> </ul>"},{"location":"providers/bedrock-knowledge-base/#api-calls","title":"API Calls","text":"<p>You can use normal api invoke, the Bedrock connector will pop last message to chat with the knowledge base.</p> <pre><code>POST /v1/chat/completions\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"model\": \"your-custom-model-name\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"how to protect s3 data?\"\n    }\n  ]\n}\n</code></pre>"},{"location":"providers/bedrock-knowledge-base/#use-brclient","title":"Use BRClient","text":""},{"location":"providers/continue_coder/","title":"continue-coder","text":"<p>Since Docker image version 0.0.13</p> <p>This Provider is compatible with the autocompletion of the AI-assisted coding plugin Continue.</p>"},{"location":"providers/continue_coder/#model-configuration","title":"Model configuration","text":"<pre><code>{\n  \"localLlmModel\": \"claude-3-haiku\"\n}\n</code></pre> Key Type Required Default value Description localLlmModel string Y A native model\u2019s name <p>Then grant this model to  group or apikey.</p>"},{"location":"providers/continue_coder/#continue-configuration","title":"Continue configuration","text":"<p>After entering the plugin configuration, refer to the following configuration parameters:</p> <pre><code>{\n  \"tabAutocompleteModel\": {\n    \"title\": \"Any-title\",\n    \"model\": \"you-defined-model-name\",\n    \"apiKey\": \"br-xxxxxxxxxxxx\",\n    \"contextLength\": 4000,\n    \"apiBase\": \"https://&lt;your-endpoint&gt;/v1/\",\n    \"provider\": \"openai\"\n  },\n  \"tabAutocompleteOptions\": {\n    \"debounceDelay\": 3000,\n    \"multilineCompletions\": \"always\"\n  }\n}\n</code></pre> <p>Note</p> <p>If the auto-completion of Continue is triggered, it will immediately consume tokens. Please appropriately increase the <code>debounceDelay</code> parameter.</p>"},{"location":"providers/introduction/","title":"Using Provider","text":"<p>A Provider is used to provide services to the outside world through a Model.</p> <p>First, you need to create a new model.</p> <p>Select the corresponding Provider from the dropdown list.</p> <p>Different Providers will correspond to different configurations.</p> <p>This section will specifically describe the configuration for each model.</p>"},{"location":"providers/nova-canvas/","title":"nova-canvas","text":"<p>Applicable for Docker image version 0.0.20 and above</p> <p>This Provider implements various image processing and generation capabilities of the nova-canvas model.</p>"},{"location":"providers/nova-canvas/#configuration","title":"Configuration","text":"<pre><code>{\n  \"regions\": [\"us-east-1\"],\n  \"s3Bucket\": \"&lt;your-bucket&gt;\",\n  \"s3Prefix\": \"&lt;your-prefix&gt;\",\n  \"s3Region\": \"us-east-1\",\n  \"paintModelId\": \"amazon.nova-canvas-v1:0\",\n  \"localLlmModel\": \"claude35\"\n}\n</code></pre> Key Type Required Default Value Description localLlmModel string Yes - Choose a local model that supports function calling paintModelId string Yes amazon.nova-canvas-v1:0 Currently only this value is supported s3Bucket string Yes - For storing generated images, ensure correct IAM permissions s3Prefix string No - S3 prefix, combines with date to form the final S3 key s3Region string Yes - Region of the S3 bucket regions string[] No [\u201cus-east-1\u201d] Available regions for paintModelId"},{"location":"providers/nova-canvas/#feature-overview","title":"Feature Overview","text":"<p>Supports multi-turn image processing dialogues using natural language. Main features include:</p> Feature Task Type Example Notes Text-to-Image TEXT_IMAGE \u201cGenerate a cute kitten\u201d - Image-to-Image TEXT_IMAGE \u201cGenerate a kitten based on this image: https(s3)://url\u2026\u201d May trigger IMAGE_VARIATION Background Removal BACKGROUND_REMOVAL \u201cRemove the background from this image: https(s3)://url\u2026\u201d - Change Foreground INPAINTING \u201cReplace the female model in the image with an Asian model\u201d Clearly specify the foreground object to change. In multi-turn conversations, if the foreground can be inferred, it doesn\u2019t need to be specified. Change Background OUTPAINTING \u201cChange the background of the female model to an indoor scene\u201d - Generate Variations IMAGE_VARIATION \u201cGenerate some variations based on the above image\u201d - Image Colorization COLOR_GUIDED_GENERATION \u201cAdd red and orange tones to the image\u201d - <p>Additionally, you can specify the number and dimensions of images to generate during the conversation.</p> <p>For detailed examples, please refer to: https://docs.aws.amazon.com/nova/latest/userguide/image-gen-access.html</p>"},{"location":"providers/nova-canvas/#additional-notes","title":"Additional Notes","text":"<p>When making API requests, if the <code>stream</code> parameter is set to <code>false</code>, the output will be in the following format:</p> <pre><code>{\n  \"model\": \"some-model\",\n  \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"content\": \"I'll help you generate an image of a cat in the style of Qi Baishi, the renowned Chinese painter known for his watercolor works with bold, expressive brushstrokes and a distinctive traditional Chinese artistic style.\\n\\nLet me use the txt2img function to create this image. I'll craft a prompt that captures both the cat and Qi Baishi's artistic style.\",\n        \"role\": \"assistant\"\n      }\n    },\n    {\n      \"message\": {\n        \"tool_calls\": [\n          {\n            \"type\": \"function\",\n            \"function\": {\n              \"name\": \"txt2img\",\n              \"arguments\": {\n                \"prompt\": \"A lovely cat painted in Qi Baishi style, traditional Chinese ink and wash painting, expressive brushstrokes, minimalist composition, elegant and graceful, watercolor technique\",\n                \"width\": 512,\n                \"height\": 512,\n                \"negative_prompt\": \"nsfw, photorealistic, western art style, digital art\"\n              }\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"usage\": {\n    \"completion_tokens\": 235,\n    \"prompt_tokens\": 2529,\n    \"total_tokens\": 2764\n  },\n  \"images\": [\n    \"https://a-s3-signed-url\"\n  ]\n}\n</code></pre>"},{"location":"providers/ollama/","title":"ollama","text":"<p>You can deploy native model with Ollama, This provider can adapt to the API of Ollama.</p> <p>For more information, visit https://github.com/ollama/ollama/.</p>"},{"location":"providers/ollama/#configuration","title":"Configuration","text":"<pre><code>{\n  \"host\": \"http://localhost:11434\",\n  \"model\": \"phi3\"\n}\n</code></pre> Key Type Required Default value Description host string Y Ollama\u2019s host address model string Y Model id. See Ollama doc"},{"location":"providers/openai-compatible/","title":"openai-compatible","text":"<p>Applies to Docker image version 0.0.21 and above</p> <p>This Provider allows you to reconfigure third-party models that have already been adapted to the OpenAI API into BRConnector.</p>"},{"location":"providers/openai-compatible/#configuration","title":"Configuration","text":"<pre><code>{\n  \"model\": \"qwen-plus\",\n  \"apiKey\": \"sk-...\",\n  \"baseURL\": \"https://some-url/v1\"\n}\n</code></pre> Key Type Required Default Description baseURL string Yes Base URL apiKey string Yes API key model string Yes Third-party model name"},{"location":"providers/painter/","title":"painter","text":"<p>Since Docker image version 0.0.9 Updated in Docker image version 0.0.12 Updated in Docker image version 0.0.13 Updated in Docker image version 0.0.19</p> <p>Draw using the bedrock paint model.</p>"},{"location":"providers/painter/#configuration","title":"Configuration","text":"<pre><code>{\n  \"regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"s3Bucket\": \"&lt;your-bucket&gt;\",\n  \"s3Prefix\": \"&lt;your-prefix&gt;\",\n  \"s3Region\": \"us-east-1\",\n  \"paintModelId\": \"amazon.titan-image-generator-v2:0\",\n  \"localLlmModel\": \"claude35\"\n}\n</code></pre> Key Type Required Default value Description localLlmModel string Y You should choose a native model for function calling paintModelId string Y \u201cstability.stable-diffusion-xl-v1\u201d Bedrock image gen model id. s3Bucket string Y S3 is for storing the generated images, please set the IAM permissions to meet access requirements. s3Prefix string N \u201d\u201c The S3 prefix combined with the date will ultimately form the S3 key. s3Region string Y S3 bucket region regions string N [\u201cus-east-1\u201d] If you have applied and specified multiple regions, then a region will be randomly selected for the call. This feature can effectively alleviate performance bottlenecks. <p>paintModelId options:</p> <ul> <li>amazon.nova-canvas-v1:0</li> <li>stability.stable-image-core-v1:0</li> <li>stability.sd3-large-v1:0</li> <li>stability.stable-image-ultra-v1:0</li> <li>stability.stable-diffusion-xl-v1</li> <li>amazon.titan-image-generator-v1</li> <li>amazon.titan-image-generator-v2:0</li> </ul> <p>Then grant this model to  group or apikey.</p>"},{"location":"providers/painter/#features-and-screenshots-in-brclient","title":"Features and Screenshots in BRClient","text":"<p>Features:</p> <ul> <li>Supports natural language conversation</li> <li>Supports multi-turn conversation to refine prompts</li> <li>Supports multiple languages</li> <li>Supports image size and aspect ratio ratio</li> </ul> <p>Screenshots in BRClient:</p> <p></p> <p></p> <p></p>"},{"location":"providers/sagemaker-deepseek/","title":"sagemaker-deepseek","text":"<p>Since Docker image version 0.0.27</p> <p>This provider is designed to adapt DeepSeek R1 class models deployed in SageMaker.</p>"},{"location":"providers/sagemaker-deepseek/#deployment-scenarios","title":"Deployment Scenarios","text":"<p>The following methods for deploying DeepSeek-R1 models in SageMaker have been tested:</p> <p>1. Deployment using the lmi engine</p> <p>It directly outputs content, and in most cases includes a <code>&lt;/think&gt;</code> tag.</p> <p>Please refer to the deployment script:</p> <p>https://github.com/aws-samples/sample-connector-for-bedrock/tree/main/notebook/SageMaker</p> <p>2. Direct deployment using JumpStart</p> <p>Using JumpStart will directly output the standard DeepSeek format, which includes content with the <code>reasoning_content</code> attribute. Please set the platform to <code>deepseek</code>.</p> <p>3. Deployment using Bedrock</p> <p>It directly outputs content, and in most cases includes a <code>&lt;/think&gt;</code> tag.</p> <p>Another difference is that it outputs information like <code>data:</code>. This provider has already handled these differences.</p>"},{"location":"providers/sagemaker-deepseek/#configuration","title":"Configuration","text":"<pre><code>{\n  \"regions\": [\n    \"us-east-1\"\n  ],\n  \"endpointName\": \"&lt;your-sagemaker-endpoint-name&gt;\",\n  \"thinking\": true,\n  \"platform\": \"deepseek\"\n}\n</code></pre> Key Type Required Default value Description endpointName string Y SageMaker endpoint name regions string[] or string N [\u201cus-east-1\u201d] You can deploy the model in multiple availability zones to increase model availability. platform string N If using JumpStart, fill in <code>deepseek</code>. For other cases, this is not required. thinking boolean N false In lmi mode, enabling thinking will force adding a <code>&lt;think&gt;</code> tag after the prompt"},{"location":"providers/sagemaker-lmi/","title":"sagemaker-lmi","text":"<p>Since Docker image version 0.0.8</p> <p>Connect to Sagemaker LLM modes.</p>"},{"location":"providers/sagemaker-lmi/#configuration","title":"Configuration","text":"<pre><code>{\n  \"regions\": [\n    \"us-east-1\"\n  ],\n  \"endpointName\": \"&lt;your-sagemaker-endpoint&gt;\"\n}\n</code></pre> Key Type Required Default value Description endpointName string Y Sagemaker endpoint name regions string[] or string N [\u201cus-east-1\u201d] If you have applied and specified multiple regions, then a region will be randomly selected for the call. This feature can effectively alleviate performance bottlenecks. <p>Then grant this model to  group or API key.</p>"},{"location":"providers/sagemaker-lmi/#deploy-models-via-sagemaker-lmi","title":"Deploy models via Sagemaker LMI","text":"<p>Sagemaker LMI already supports direct deployment of some popular open-source LLM models, enabling message API-style calls without the need to write custom inference programs.</p> <p>Please refer to this link to view the model deployment:</p> <p>https://github.com/aws-samples/sample-connector-for-bedrock/tree/main/notebook/sagemaker</p>"},{"location":"providers/smart-router/","title":"smart-router","text":"<p>Applies to Docker image version 0.0.21 and above</p> <p>This Provider can automatically route models based on predefined rules.</p> <p>You need to configure routing rules in the backend, and these rules are based on natural language/prompt words.</p>"},{"location":"providers/smart-router/#configuration","title":"Configuration","text":"<pre><code>{\n  \"rules\": [\n    {\n      \"name\": \"my-painter\",\n      \"description\": \"draw a picture\"\n    },\n    {\n      \"name\": \"amazon-nova-pro\",\n      \"description\": \"When user talks about AWS or Amazon\"\n    },\n    {\n      \"name\": \"claude-3-sonnet\",\n      \"description\": \"uncertain\"\n    }\n  ],\n  \"localLlmModel\": \"amazon-nova-lite\"\n}\n</code></pre> <p>In <code>rules</code>:</p> <ul> <li>name: The name of the model, referring to the model name configured in BRConnector. This key must be retained.</li> <li>description: A description of the model.</li> </ul> <p>Tip</p> <p>The above configuration will be fully input into the system prompt. To improve intent recognition accuracy, you can add any other keys such as \u201cwhen\u201d, \u201cexcept\u201d, etc.</p> Key Type Required Default Description localLlmModel string Yes Select a local model that supports function calls rules json Yes Refer to the configuration example above <p>Tip</p> <p>If the router does not select any model, it will degrade the model name to \u201cdefault\u201d. Therefore, it is best to have a model named \u201cdefault\u201d in your configurations.</p> <p>This translation provides an English version of the provided Chinese text, maintaining the structure and meaning of the original content.</p>"},{"location":"providers/titan_embedings/","title":"titan_embedings","text":"<p>Since Docker image version 0.0.18</p> <p>Using this Provider, you can use the Titan text embeddings model to output embeddings (float arrays) for text. The model configuration can be referenced in this document: Amazon Titan Embeddings Text</p>"},{"location":"providers/titan_embedings/#parameter-configuration","title":"Parameter Configuration","text":"Key Type Required Default value Description modelId string Y Model id, <code>amazon.titan-embed-text-v2:0</code> or <code>amazon.titan-embed-text-v1</code> regions string[] or string N Same as the AWS_DEFAULT_REGION environment variable If you have applied for and specified multiple regions, one region will be randomly selected for the call. This feature can effectively alleviate performance bottlenecks. dimensions number N 1024 Output dimension, only applicable to the <code>amazon.titan-embed-text-v2:0</code> model. normalize boolean N true Flag indicating whether or not to normalize the output embeddings, only applicable to the <code>amazon.titan-embed-text-v2:0</code> model <p>An example configuration for titan_embeddings is as follows:</p> <pre><code>{\n  \"modelId\": \"amazon.titan-embed-text-v2:0\",\n  \"regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ]\n}\n</code></pre>"},{"location":"providers/titan_embedings/#api-usage","title":"API Usage","text":"<p>The embeddings API follows the OpenAI-compatible format:</p> <pre><code>POST /v1/embeddings\nAuthorization: Bearer {{key}}\nContent-Type: application/json\n\n{\n  \"model\": \"{{model}}\", \n  \"input\": \"\u4f60\u597d\"\n}\n</code></pre> <p>For batch processing, you can pass an array of strings:</p> <pre><code>POST /v1/embeddings\nAuthorization: Bearer {{key}}\nContent-Type: application/json\n\n{\n  \"model\": \"{{model}}\", \n  \"input\": [\"\u4f60\u597d\", \"hero\"]\n}\n</code></pre> <p>The API will return a response in the following format:</p> <pre><code>{\n  \"object\": \"list\",\n  \"model\": \"amazon.titan-embed-text-v2:0\",\n  \"data\": [\n    {\n      \"object\": \"embedding\",\n      \"index\": 0,\n      \"embedding\": [\n        -0.03824065253138542,\n        0.0244449749588,\n        // ... (remaining embedding values)\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"providers/urls-reader/","title":"urls-reader","text":"<p>Since Docker image version 0.0.12</p> <p>You can use this provider to read the text content of URLs in conversations, support reading multiple URLs.</p>"},{"location":"providers/urls-reader/#model-configuration","title":"Model configuration","text":"<p>The parameter configuration is as follows:</p> <p>Name: some-model</p> <p>Provider: urls-reader</p> <p>Configuration:</p> <pre><code>{\n  \"localLlmModel\": \"sonnet3.5\"\n}\n</code></pre> <ul> <li>localLlmModel: must be configured as a model that supports function calling and already exists in BRConnector.</li> </ul>"},{"location":"providers/urls-reader/#screenshots-in-brclient","title":"Screenshots in BRClient","text":""},{"location":"providers/web-miner/","title":"web-miner","text":"<p>Since Docker image version 0.0.10</p> <p>Seach the internet.</p> <p>This Provider can turn your question into search keywords, obtain results through search engines, and then summarize them into corresponding answers.</p> <p>Tip</p> <p>Do not ask too many rounds of questions, because this Provider will summarize your previous prompts to keywords for searching.</p> <p>In BRClient, too long information is summarized into a single history, losing the earliest user input, which results in the AI answering a far cry from what you want.</p>"},{"location":"providers/web-miner/#model-configuration","title":"Model configuration","text":"<p>The parameter configuration is as follows:</p> <p>Name: some-model</p> <p>Provider: web-miner</p> <p>Configuration:</p> <pre><code>{\n  \"sites\": [\n    \"aws.amazon.com\",\n    \"www.amazonaws.cn\",\n    \"repost.aws\",\n    \"stackoverflow.com\"\n  ],\n  \"localLlmModel\": \"claude-3-sonnet\",\n  \"searxng\": {\n    \"host\": \"http://127.0.0.1:8081/\"\n  },\n  \"serpapi\": {\n    \"apiKey\": \"xxx......\",\n    \"engine\": \"google\"\n  },\n  \"google\": {\n    \"googleAPIKey\": \"AIxxxxxx_xxxxxxxx\",\n    \"googleCSECX\": \"00xxxc000a2xxxxx\"\n  }\n}\n</code></pre> <ul> <li>sites: Limit the search to these websites, you can leave this parameter unspecified.</li> <li>localLlmModel: must be configured as a model that supports function calling and already exists in BRConnector.</li> <li>the search tools below are supported in order:   1. searxng   2. SerpAPI   3. google</li> </ul> <p>Note</p> <p>You need to configure localLlmModel as a claude3+ model provided by the bedrock-converse provider, as other models do not yet have the capability for function calling. The early default claude3 model in the system is not driven by converse. If you use these models, you need to update the original configuration to the bedrock-converse provider. Please note to modify the key \u2018model_id\u2019 to \u2018modelId\u2019.</p>"},{"location":"providers/web-miner/#search-engines","title":"Search engines","text":""},{"location":"providers/web-miner/#searxng","title":"searxng","text":"<p>Since Docker image version 0.0.11</p> <p>Visit https://docs.searxng.org/ for more information.</p> <p>Create a file: <code>settings.yml</code> to support json\u3002</p> <pre><code>use_default_settings: true\nserver:\n    secret_key: \"some-Other-PWD\"   # change this!\n    bind_address: \"0.0.0.0\"\nsearch:\n  formats:\n\n    - html\n    - json\n</code></pre> <p>Start searxng:</p> <pre><code> docker run --name searxng -d -p 8081:8080 \\\n  -v ./settings.yml:/etc/searxng/settings.yml \\\n  -e \"INSTANCE_NAME=searxng\" searxng/searxng\n</code></pre> <p>Then you will get the searxng endpoint: http://127.0.0.1:8081/, configure it to searxng\u2019s host node.</p>"},{"location":"providers/web-miner/#serpapi","title":"SerpAPI","text":"<p>Since Docker image version 0.0.11</p> <p>For more information, visit https://serpapi.com/.</p> <p>Once you\u2019re logged in, you can see Api key in a prominent place on it.</p> <p>The engine parameter supports the following, and the default is google:</p> <ul> <li>google</li> <li>bing</li> <li>baidu</li> <li>duckduckgo</li> <li>yahoo</li> <li>yandex</li> <li>yelp</li> <li>naver</li> </ul> <p>SerpAPI is not free</p> <p>Exceeding the monthly free limit will be charged.</p>"},{"location":"providers/web-miner/#google","title":"Google","text":"<p>To use the Google Custom Search Engine, you need the following 2 keys, click the link to create them:</p> <ul> <li> <p>Google API Key</p> </li> <li> <p>Google CSECX</p> </li> </ul> <p>Google CSE is not free</p> <p>Exceeding the daily free limit will be charged.</p>"},{"location":"providers/web-miner/#screenshots-in-brclient","title":"Screenshots in BRClient","text":""},{"location":"user-manual/apis/","title":"API Reference","text":""},{"location":"user-manual/apis/#llm-api","title":"LLM API","text":""},{"location":"user-manual/apis/#completions","title":"Completions","text":""},{"location":"user-manual/apis/#an-ordinary-request","title":"An ordinary request","text":"<pre><code>POST /v1/chat/completions\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"model\": \"claude-3-sonnet\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"ping\"\n    }\n  ],\n  \"stream\": true,\n  \"temperature\": 1,\n  \"max_tokens\": 4096\n}\n</code></pre>"},{"location":"user-manual/apis/#including-a-picture-in-the-request","title":"Including a picture in the request","text":"<pre><code>POST /v1/chat/completions\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"model\": \"claude-3-sonnet\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\":\"text\": \n          \"text\":\"Describe this picture.\"\n        },\n        {\n          \"type\": \"image_url\",\n          \"image_url\": { \n            \"url\": \"data:image/webp;base64,....\"\n          }\n        }\n      ]\n    }\n  ]\n}\n</code></pre> <ul> <li>image url can be a base64 string or a http(s) url.</li> </ul>"},{"location":"user-manual/apis/#including-a-docuement-in-the-request","title":"Including a docuement in the request","text":"<pre><code>POST /v1/chat/completions\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"model\": \"claude-3-sonnet\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": [\n        {\n          \"type\":\"text\": \n          \"text\":\"Describe this document.\"\n        },\n        {\n          \"type\":\"doc\",\n          \"doc\": { \n            \"name\": \"xxx\",\n            \"format\": \"pdf\",\n            \"size\": 900,\n            \"source\": {\n              \"bytes\": {\n                0:35,1:35,2:37,...\n              }\n            }\n          }\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"user-manual/apis/#function-calling-tool-use","title":"Function calling (tool use)","text":"<pre><code>POST /v1/chat/completions\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"model\": \"claude-3-sonnet\",\n  \"tools\": [\n    {\n      \"type\": \"function\",\n      \"function\": {\n        \"name\": \"bookFlight\",\n        \"description\": \"Book a flight\",\n        \"parameters\": {\n          \"type\": \"object\",\n          \"departure\": {\n            \"type\": \"string\",\n            \"description\": \"departure airport\"\n          },\n          \"arrival\": {\n            \"type\": \"string\",\n            \"description\": \"arrival airport\"\n          },\n          \"departureDate\": {\n            \"type\": \"string\",\n            \"description\": \"departure time\"\n          }\n        },\n        \"required\": [\n          \"departure\",\n          \"arrival\",\n          \"departureDate\"\n        ]\n      }\n    }\n  ],\n  \"tool_choice\": \"auto\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"You are an experienced business ticket agent, and your role is to help corporate customers purchase tickets.  Current time: 2024-11-13T08:13:17.778Z.\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"I would like to book a ticket to New York tomorrow.\\n    Required parameters are:\\n\\n    \\ndeparture: \\narrival: \\ndepartureDate: \\n\\n\"\n    }\n  ]\n}\n</code></pre>"},{"location":"user-manual/apis/#embeddings","title":"Embeddings","text":"<pre><code>POST {{hostLocal}}/v1/embeddings\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"model\": \"your-embedding-model\",\n  \"input\": \"Hello world.\"\n}\n</code></pre>"},{"location":"user-manual/apis/#list-models","title":"List models","text":"<pre><code>GET /v1/models\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/apis/#admin-api","title":"Admin API","text":""},{"location":"user-manual/apis/#api-key","title":"API key","text":""},{"location":"user-manual/apis/#create-an-api-key","title":"Create an api key","text":"<pre><code>POST /admin/api-key/apply\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"name\": \"jack\",\n  \"group_id\": 1,\n  \"role\": \"user\",\n  \"email\": \"\",\n  \"month_quota\": 1.00\n}\n</code></pre>"},{"location":"user-manual/apis/#create-an-api-key-with-admin-role","title":"Create an api key with admin role","text":"<pre><code>POST /admin/api-key/apply\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"name\": \"rob\",\n  \"group_id\": 1,\n  \"role\": \"admin\",\n  \"email\": \"\"\n}\n</code></pre>"},{"location":"user-manual/apis/#update-and-api-keys-info","title":"Update and api key\u2019s info","text":"<pre><code>POST /admin/api-key/update\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"id\": 2,\n  \"name\": \"jack\",\n  \"month_quota\": 10.00\n}\n</code></pre>"},{"location":"user-manual/apis/#recharge-up-an-api-key","title":"Recharge up an API key","text":"<pre><code>POST /admin/api-key/recharge\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"api_key\": \"br-xxxxxxxxxxxxxxx\",\n  \"balance\": 0.23\n}\n</code></pre>"},{"location":"user-manual/apis/#recharge-history","title":"Recharge history","text":"<pre><code>GET /admin/payment/list?key_id=\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/apis/#list-api-keys","title":"List api keys","text":"<pre><code>GET /admin/api-key/list?q=&amp;name=&amp;group_id=&amp;role=&amp;limit=10&amp;offset=\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/apis/#delete-an-api-key","title":"Delete an api key","text":"<pre><code>POST /admin/api-key/delete\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"id\": 1\n}\n</code></pre>"},{"location":"user-manual/apis/#model","title":"Model","text":""},{"location":"user-manual/apis/#list-models_1","title":"List models","text":"<pre><code>GET /admin/model/list?q=&amp;limit=10&amp;offset=\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/apis/#create-a-model","title":"Create a model","text":"<pre><code>POST /admin/model/save\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"name\": \"xxxx\",\n  \"group_id\": 1,\n  \"multiple\": false, \n  \"config\": \"{\\\"modelId\\\": \\\"somevalue\\\"}\", \n  \"provider\": \"bedrock-converse\",\n  \"price_in\": 1,\n  \"price_out\":3\n}\n</code></pre>"},{"location":"user-manual/apis/#update-a-model","title":"Update a model","text":"<pre><code>POST /admin/model/save\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"id\": 1,\n  \"name\": \"xxxx\",\n  \"group_id\": 1,\n  \"multiple\": false, \n  \"config\": \"{\\\"modelId\\\": \\\"somevalue\\\"}\", \n  \"provider\": \"bedrock-converse\",\n  \"price_in\": 1,\n  \"price_out\":3\n}\n</code></pre>"},{"location":"user-manual/apis/#delete-a-model","title":"Delete a model","text":"<pre><code>POST /admin/model/delete\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"id\": 1\n}\n</code></pre>"},{"location":"user-manual/apis/#webhook","title":"Webhook","text":""},{"location":"user-manual/apis/#list-webhook","title":"List webhook","text":"<pre><code>GET /admin/bot/feishu/list?q=&amp;limit=10&amp;offset=\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/apis/#create-a-webhook","title":"Create a webhook","text":"<pre><code>POST /admin/bot/feishu/save\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"name\": \"xxxx\",\n  \"config\": \"{\\\"appId\\\": \\\"cli_xxxxx\\\", \\\"apiKey\\\": \\\"br-xxxxx\\\", \\\"modelId\\\": \\\"claude-3-sonnet\\\", \\\"appSecret\\\": \\\"xxxxx\\\" }\", \n  \"provider\": \"bedrock-converse\"\n}\n</code></pre>"},{"location":"user-manual/apis/#update-a-webhook","title":"Update a webhook","text":"<pre><code>POST /admin/bot/feishu/save\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{ \n  \"appId\": \"cli_xxxxx\", \n  \"apiKey\": \"br-xxxxx\", \n  \"modelId\": \"claude-3-sonnet\", \n  \"appSecret\": \"xxxxx\" \n}\n</code></pre>"},{"location":"user-manual/apis/#delete-a-webhook","title":"Delete a webhook","text":"<pre><code>POST /admin/bot/feishu/delete\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"id\": 1\n}\n</code></pre>"},{"location":"user-manual/apis/#group","title":"Group","text":""},{"location":"user-manual/apis/#list-groups","title":"List groups","text":"<pre><code>GET /admin/group/list?q=&amp;limit=10&amp;offset=\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/apis/#delete-a-group","title":"Delete a group","text":"<pre><code>POST /admin/group/delete\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"id\": 1\n}\n</code></pre>"},{"location":"user-manual/apis/#model-authorization","title":"Model Authorization","text":"<ul> <li>List models of a group</li> <li>Authorize the model to a group</li> <li>Deauthorize the model from a group</li> <li>List models of an api key</li> <li>Authorize the model to an api key</li> <li>Deauthorize the model from an api key</li> </ul>"},{"location":"user-manual/apis/#chat-records","title":"Chat records","text":""},{"location":"user-manual/apis/#list-sessions","title":"List sessions","text":"<pre><code>GET /admin/session/list?q=&amp;limit=10&amp;offset=&amp;key_id=\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre> <p>List threads / histories</p> <pre><code>GET /admin/thread/list?q=&amp;limit=10&amp;offset=&amp;key_id=&amp;session_id=\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/apis/#user-api","title":"User API","text":""},{"location":"user-manual/apis/#my-sessions","title":"My sessions","text":"<pre><code>GET /user/session/list?q=&amp;limit=10&amp;offset=\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/apis/#my-session-detail","title":"My session detail","text":"<pre><code>GET /user/session/detail/1\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/apis/#my-threads-histories","title":"My threads / histories","text":"<pre><code>GET /user/thread/list?q=&amp;limit=10&amp;offset=&amp;session_id=\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/apis/#my-thread-detail","title":"My thread detail","text":"<pre><code>GET /user/thread/detail/1\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n</code></pre>"},{"location":"user-manual/development/","title":"Development","text":"<p>This project mainly provides sample code, and it is strongly recommended that you develop it yourself with reference to this project.</p>"},{"location":"user-manual/development/#local-development","title":"Local Development","text":""},{"location":"user-manual/development/#installation","title":"installation","text":"<p>Clone the repository.</p> <p>Install dependencies:</p> <pre><code>npm install\n# or\nyarn\n</code></pre>"},{"location":"user-manual/development/#environment","title":"Environment","text":"<p>the .env file</p> <p>Place it in the root directory of the project.</p> <pre><code>PGSQL_HOST=127.0.0.1\nPGSQL_DATABASE=brconnector_db\nPGSQL_USER=postgres\nPGSQL_PASSWORD=mysecretpassword\nPGSQL_DEBUG_MODE=ok\nADMIN_API_KEY=br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nDEBUG_MODE=true\n</code></pre> <p>The connector supports the following environment variables:</p> Key Required Default value Description ADMIN_API_KEY yes You need to set this value to generate the first API key. PGSQL_HOST no The address of the PostgreSQL. If the database is not configured, then the connector is just a pure proxy. PGSQL_PORT no 5432 The port of the PostgreSQL. PGSQL_DATABASE no The name of the PostgreSQL database. PGSQL_USER no The login user for the PostgreSQL. PGSQL_PASSWORD no The password user for the PostgreSQL. PGSQL_MAX no 80 The maximum connection pool size for PostgreSQL. PGSQL_DEBUG_MODE no false If you set this parameter, it will print out the SQL statements and parameters in the console. AWS_ACCESS_KEY_ID no If your application has been authorized through an IAM policy, you don\u2019t need to set this variable. AWS_SECRET_ACCESS_KEY no If your application has been authorized through an IAM policy, you don\u2019t need to set this variable. AWS_DEFAULT_REGION no \u2018us-east-1\u2019 DEBUG_MODE no false If you set this parameter, it will print out a lot of debugging information in the console. DISABLE_UI no false Setting this value will not publish the front-end UI. SMTP_HOST no SMTP server host address. Setting up an SMTP Server allows you to send your API key directly to the user\u2019s email inbox. SMTP_PORT no 465 SMTP server port number SMTP_USER no SMTP server username SMTP_PASS no SMTP server password SMPT_FROM no SMTP sender email address, your SMTP server maybe verify this PERFORMANCE_MODE no If you set this environment variable, then chat logs and billing updates will no longer be saved. This means the cost control feature will be disabled."},{"location":"user-manual/development/#run-backend","title":"Run backend","text":"<pre><code>npm run dev\n# or\nyarn dev\n</code></pre> <p>If you have configured postgres, the tables will be created automatically.</p>"},{"location":"user-manual/development/#run-fontend","title":"Run fontend","text":"<pre><code>npm run dev-ui\n# or\nyarn dev-ui\n</code></pre>"},{"location":"user-manual/development/#build","title":"Build","text":""},{"location":"user-manual/development/#build-the-backend-and-frontend-together","title":"Build the backend and frontend together","text":"<pre><code>npm run build\n# or\nyarn build\n</code></pre> <p>The above command will compile the frontend and backend applications into the dist/public and dist/server directories, respectively.</p> <p>After a successful compilation, navigate to the dist directory and execute <code>node server/index.js</code>.</p> <p>If you have not disabled the WebUI, http://localhost:8866/manager will be bound to the WebUI.</p>"},{"location":"user-manual/development/#build-back-end-option","title":"Build back-end (Option)","text":"<pre><code>npm run build-server\n# or\nyarn build-server\n</code></pre>"},{"location":"user-manual/development/#build-front-end-option","title":"Build front-end (Option)","text":"<pre><code>npm run build-ui\n# or\nyarn build-ui\n</code></pre>"},{"location":"user-manual/development/#build-docker-image","title":"Build Docker image","text":"<p>After building, you can use Dockerfile to build Docker image.</p> <p>The content of the Dockerfile:</p> <pre><code>FROM node:20\n\nRUN apt update &amp;&amp; apt install -y awscli\n\nCOPY ./dist /app\nWORKDIR /app\nCOPY ./src/scripts/* ./src/scripts/\nCOPY ./package.json .\n\nRUN npm install --omit=dev\n\nHEALTHCHECK --interval=5s --timeout=3s \\\n  CMD curl -fs http://localhost:8866/ || exit 1\n\nEXPOSE 8866\n\nCMD [\"node\", \"server/index.js\"]\n</code></pre> <p>Note</p> <p>Please note: The above code is not included in this project. Please save the above content in the project\u2019s root directory <code>./Dockerfile</code>.</p> <p>Then execute the following command:</p> <pre><code>docker build -t &lt;registry-repo-tag&gt; .\n</code></pre>"},{"location":"user-manual/introduction/","title":"How to Use","text":"<p>You can access BRConnector using the following methods:</p> <ul> <li>Direct access to the API</li> <li>Using Sample Client for Bedrock(BRClient)</li> <li>Using other clients compatible with OpenAI</li> </ul> <p>Currently, there are many OpenAI clients available on the internet, and some clients can set the Host and API key, so you can directly reuse these clients.</p> <p>For some clients that cannot set the model name, you can work around it in the following way:</p> <p>Suppose a client has the model name fixed as <code>xyzllama3</code>.</p> <p>In the backend of BRConnector, you just need to set the model name as xyzllama3, set the Provider as bedrock-converse, and in the model configuration, set the modelId to any supported model ID.</p>"},{"location":"user-manual/management/","title":"Management","text":""},{"location":"user-manual/management/#login","title":"Login","text":"<p>The management backend path for BRConnector is: http(s)://your-endpoint/manager/.</p> <p>Once you have the BRConnector API Key, you can log into the manager backend.</p> <p>API keys have admin privileges and regular user privileges. Regular users can view their own consumption and chat records.</p> <p>In addition to having the functions of a regular user, the admin role can also manage API keys, models, and groups.</p>"},{"location":"user-manual/management/#api-keys-management","title":"API Keys management","text":""},{"location":"user-manual/management/#main-features","title":"Main features","text":"<p>You can:</p> <ul> <li>Create a user (issue a Key).</li> <li>Import users in bulk.</li> <li>Modify this Key, change the name, monthly consumption limit, etc.</li> <li>Reset the Key.</li> <li>Recharge the Key.</li> </ul>"},{"location":"user-manual/management/#import-users","title":"Import users","text":"<p>You need to prepare a csv file, the column should contain the <code>name</code> and <code>email</code> fields.</p> <pre><code>name,email\ntom,tom@example.com\njerry,jerry@example.com\n</code></pre> <p>Download CSV file.</p> <p>This project directly supports the import template of cognito. Here\u2019s an Excel example of Cognito, where the user\u2019s name takes precedence over <code>cognito:username</code> and then <code>name</code>.</p> <pre><code>cognito:username,name,given_name,family_name,middle_name,nickname,preferred_username,profile,picture,website,email,email_verified,gender,birthdate,zoneinfo,locale,phone_number,phone_number_verified,address,updated_at,cognito:mfa_enabled\nJohn,,John,Doe,,,,,,,johndoe@example.com,TRUE,,02/01/1985,,,+12345550100,TRUE,123 Any Street,,FALSE\nJane,,Jane,Roe,,,,,,,janeroe@example.com,TRUE,,01/01/1985,,,+12345550199,TRUE,100 Main Street,,FALSE\n</code></pre> <p>Note</p> <p>If you have SMTP configured and include the user\u2019s email in the csv file, the API key will be emailed directly to the user.</p>"},{"location":"user-manual/management/#models","title":"Models","text":"<p>Enter the manager backend, as shown in the image:</p> <p></p> <p>Model form:</p> <p></p> <p>A model consists of the following fields:</p> Key Type Required Default value Description Name string Y The name of the model, which is also the model name in the API call Provider string Y The Provider is provided by BRConnector for selection. Multiple int N 0 Whether the current model supports multi-modal. Prince-In number Y The price of input tokens. You can define this price arbitrarily, mainly to control the model calling of this system. Prince-Out number Y The price of output tokens. Config string(json) N Different configurations will be provided according to different providers. <p>After creating the model, you need to authorize the model to a group or user (API Key).</p> <p>Tip</p> <p>Some clients may restrict users from customizing model names. To enable BRConnector to respond to such requests, you can adopt the following strategies:</p> <ol> <li> <p>Create a new model in the backend with a name matching the one specified by the client, thereby forwarding the request to your actual backend model.</p> </li> <li> <p>Alternatively, you can create a generic model named \u201cdefault\u201d. This way, regardless of the model name passed from the frontend, BRConnector will be able to respond.</p> </li> </ol> <p>These methods ensure that BRConnector maintains flexibility and compatibility when facing various client requests, thereby enhancing the overall adaptability of the system.</p>"},{"location":"user-manual/management/#group-management","title":"Group Management","text":"<p>Through groups, you can conveniently grant authorization to models.</p> <p>At the same time, API Keys can also belong to a group.</p>"},{"location":"user-manual/management/#models-authorization","title":"Models Authorization","text":"<p>After creating a model, you need to grant authorization for the model to a group or user (API Key).</p> <p>On the API Keys list page, click the Models button.</p> <p>On the Groups list page, there is also a Models button.</p> <p>The models authorized to API Keys and groups have an \u201cAND\u201d relationship.</p>"},{"location":"user-manual/management/#webhook-configuration","title":"Webhook Configuration","text":"<p>Includes the following features:</p> <ul> <li>Add Feishu bot</li> <li>Modify Feishu bot</li> </ul> <p>To create a Feishu bot, enter the manager backend as shown: </p> <p>Webhook form:</p> <p></p> <p>A Webhook consists of the following fields:</p> Key Type Required Default value Description Name string Y Name of the Webhook, which also determines the URL of the Webhook Provider string Y Provider is selected from options provided by BRConnector Config string(json) N Different configurations are provided based on different providers"},{"location":"user-manual/management/#config-example","title":"Config Example","text":"<pre><code>{\n  \"appId\": \"cli_xxxxx\",\n  \"apiKey\": \"br-xxxxx\",\n  \"modelId\": \"claude-3-sonnet\", \n  \"appSecret\": \"xxxxx\"\n}\n</code></pre> <ul> <li>appId: The app id of the Feishu bot</li> <li>apiKey: The api key of the BRConnector user, which the Feishu bot will use to call models with relevant permissions</li> <li>modelId: The name of the model in BRConnector</li> <li>appSecret: The app secret of the Feishu bot</li> </ul> <p>Note</p> <p>Currently, BRConnector must be restarted for the added Webhook to take effect.</p> <p>Example of configured Webhook URL:</p> <ul> <li><code>https://&lt;yourdomain&gt;/bot/feishu/&lt;webhook-name&gt;/webhook/event</code></li> <li><code>https://www.example.com/bot/feishu/feishu001/webhook/event</code></li> </ul>"},{"location":"user-manual/scenarios/feishu-bot/","title":"Feishu Bot","text":"<p>Since Docker image version 0.0.13</p> <p>Note</p> <p>Currently version only supports Feishu, does not support Lark(Feishu international version).</p> <ol> <li> <p>Enterprise administrator logs into the Feishu Open Platform</p> </li> <li> <p>Create a custom application for the enterprise </p> </li> <li> <p>Fill in the name and description </p> </li> <li> <p>Add the <code>Bot</code> capability </p> </li> <li> <p>On the bot configuration page, click on <code>Events and Callbacks</code> </p> </li> <li> <p>Edit the <code>Subscription Method</code> and modify the request URL. The request URL is related to the server-side webhook name, such as <code>https://&lt;yourdomain&gt;/bot/feishu/&lt;webhook-name&gt;/webhook/event</code>. For specific address details, refer to Webhook Configuration </p> </li> <li> <p>Add permissions </p> </li> <li> <p>Then switch to the corresponding enterprise in Feishu and search for the application (the application name from step 3) </p> </li> <li> <p>Now we can test by sending questions and let the large language model answer them </p> </li> </ol>"},{"location":"user-manual/scenarios/sample-client-for-bedrock/","title":"Sample client for Bedrock","text":""},{"location":"user-manual/scenarios/sample-client-for-bedrock/#introduction","title":"Introduction","text":"<p>The Sample Client for Bedrock (BRClient) is a sample project that demonstrates how to build a client that connects to the Bedrock large language model.</p> <p>In addition to being able to directly invoke Bedrock from the client, it can also set up this project (BRConnector) as its API backend.</p> <p>Project URL: aws-samples/sample-client-for-amazon-bedrock</p>"},{"location":"user-manual/scenarios/sample-client-for-bedrock/#quick-start","title":"Quick Start","text":"<p>You can start BRClient directly from the source code or download the installer for various platforms.</p> <p>If you have deployed the BRConnector project, you can start it directly through this URL: http(s)://your-endpoint/brclient/.</p>"},{"location":"user-manual/scenarios/sample-client-for-bedrock/#settings","title":"Settings","text":"<p>After entering the web interface, you need to enable BRConnector in the settings.</p> <p></p> <p>For the BRConnector Endpoint, simply fill in the root path of your BRConnector.</p> <p>Fill in the API Key issued by BRConnector.</p> <p>After setting it up, you can refresh the page to get the model list from BRConnector. Whenever you set up a new model, you can refresh the page to get the list of new models.</p>"},{"location":"user-manual/scenarios/vscode-plugin-cline/","title":"vscode-plugin-cline","text":"<ul> <li> <p>install cline plugin in your vscode </p> </li> <li> <p>config this plugin </p> </li> </ul>"},{"location":"user-manual/scenarios/vscode-plugin-continue/","title":"vscode-plugin-continue","text":"<ul> <li> <p>install continue plugin in your vscode </p> </li> <li> <p>configure continue plugin <code>~/.continue/config.json</code></p> </li> <li>chat api <pre><code>{\n  \"models\": [\n    {\n      \"title\": \"OpenAI-compatible\",\n      \"provider\": \"openai\",\n      \"model\": \"coding\",\n      \"apiKey\": \"br-xxxxxxxx\",\n      \"apiBase\": \"https://xxxxxx/v1\"\n    },\n    ...\n  ]\n  ...\n</code></pre></li> <li> <p>completion api <pre><code>{\n  ...\n  \"tabAutocompleteModel\": {\n    \"title\": \"Any-title\",\n    \"model\": \"coding\",\n    \"apiKey\": \"br-xxxxxxxxxxxx\",\n    \"contextLength\": 4000,\n    \"apiBase\": \"https://xxxxxxxxxxxxxxxxx/v1\",\n    \"provider\": \"openai\"\n  },\n  \"tabAutocompleteOptions\": {\n    \"debounceDelay\": 1000,\n    \"multilineCompletions\": \"always\"\n  },\n  ...\n}\n</code></pre></p> </li> <li> <p>configure provider for continue</p> <ul> <li>continue_coder</li> </ul> </li> </ul>"},{"location":"zh/","title":"Sample Connector for Bedrock","text":"<p>\u96c6\u6210 AWS \u751f\u6210\u5f0f AI\uff0c\u73b0\u5728\u975e\u5e38\u7b80\u5355\uff01</p> <p>\u4ece\u4e0b\u9762\u7684\u94fe\u63a5\u5f00\u59cb\uff1a</p> <ul> <li> <p>\u5feb\u901f\u542f\u52a8</p> </li> <li> <p>\u4f7f\u7528 Cloudformation \u5feb\u901f\u90e8\u7f72</p> </li> <li> <p>\u5f00\u53d1\u6a21\u5f0f</p> </li> </ul>"},{"location":"zh/home/","title":"\u4ecb\u7ecd","text":"<p>\u672c\u9879\u76ee\u662f\u4e00\u4e2a Amazon Bedrock \u4ee5\u53ca\u5176\u4ed6\u5927\u8bed\u8a00\u6a21\u578b\u6216\u5e94\u7528\u7684\u8f6c\u53d1\u5de5\u5177\uff0c\u4ed6\u53ef\u4ee5\u7ba1\u7406\u865a\u62df API Key\uff0c\u8bb0\u5f55\u804a\u5929\u8bb0\u5f55\uff0c\u5e76\u7ba1\u7406\u6210\u672c\u3002</p> <p>\u5b83\u4e0e\u4efb\u4f55\u53ef\u4ee5\u5b9a\u4e49 Host \u548c API \u5bc6\u94a5\u7684 OpenAI \u5ba2\u6237\u7aef\u517c\u5bb9\u3002</p>"},{"location":"zh/home/#_2","title":"\u4e3b\u8981\u7279\u6027","text":""},{"location":"zh/home/#_3","title":"\u652f\u6301\u7684\u6a21\u578b\u548c\u5e73\u53f0","text":"<ul> <li> <p>\u652f\u6301 Bedrock \u73b0\u5728\u4ee5\u53ca\u672a\u6765\u7684\u6240\u6709\u5927\u8bed\u8a00\u6a21\u578b\uff08\u901a\u8fc7 bedrock-converse \u652f\u6301\uff09\u3002</p> </li> <li> <p>\u652f\u6301\u901a\u8fc7 Sagemaker LMI \u90e8\u7f72\u7684\u6a21\u578b\uff08\u90e8\u5206\u6a21\u578b\uff09\u3002</p> </li> <li> <p>\u652f\u6301\u5176\u4ed6\u5f62\u5f0f\u7684\u81ea\u5b9a\u4e49\u6a21\u578b\uff0c\u5305\u62ec\uff1aOllama \u7b49\u3002</p> </li> <li> <p>\u66f4\u591a\u7684 AI \u6d41\u7a0b\u5316\u7684\u5e94\u7528\uff0c\u5982 \u4e92\u8054\u7f51\u641c\u7d22\uff0cAWS \u547d\u4ee4\u6267\u884c\u5668\u7b49\u3002</p> </li> </ul>"},{"location":"zh/home/#api-key","title":"API Key \u548c \u8d39\u7528\u7ba1\u7406","text":"<ul> <li>\u521b\u5efa API \u5bc6\u94a5\u3002\u53ef\u4ee5\u4e3a\u666e\u901a\u7528\u6237\u548c\u7ba1\u7406\u5458\u521b\u5efa\u3002\u666e\u901a\u7528\u6237\u53ef\u4ee5\u804a\u5929\uff0c\u800c\u7ba1\u7406\u5458\u53ef\u4ee5\u7ba1\u7406API\u5bc6\u94a5\u548c\u6210\u672c\u3002</li> <li>\u8bb0\u5f55\u6bcf\u6b21\u8c03\u7528\u7684\u6210\u672c\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u6210\u672c\u63a7\u5236\u7684\u4f9d\u636e\u3002</li> <li>\u6210\u672c\u63a7\u5236\u3002\u60a8\u53ef\u4ee5\u4e3a\u6bcf\u4e2aAPI\u5bc6\u94a5\u8bbe\u7f6e\u6bcf\u6708\u914d\u989d\u548c\u8d26\u6237\u4f59\u989d\u3002\u5f53\u6bcf\u6708\u914d\u989d\u6216\u8d26\u6237\u4f59\u989d\u4e0d\u8db3\u65f6,\u5c06\u65e0\u6cd5\u4f7f\u7528\u3002</li> <li>\u8ba1\u7b97\u603b\u4f53\u6210\u672c\u3002</li> </ul> <p>\u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6a21\u578b\u4ef7\u683c. Bedrock \u6a21\u578b\u7684\u57fa\u51c6\u4ef7\u683c\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51.</p> <p>Warning</p> <p>\u8fd9\u4e2a\u9879\u76ee\u7684\u6210\u672c\u8ba1\u7b97\u4e0d\u80fd\u4f5c\u4e3a AWS \u7684\u8ba1\u8d39\u4f9d\u636e\u3002\u5b9e\u9645\u652f\u51fa\u8bf7\u53c2\u8003 AWS \u8d26\u5355\u3002</p> <p></p>"},{"location":"zh/home/#_4","title":"\u6a21\u578b\u7ba1\u7406","text":"<p>\u6a21\u578b\u53ca\u5176\u53c2\u6570\u53ef\u4ee5\u4ece\u540e\u7aef\u5b9a\u4e49\u3002\u53c2\u89c1\u521b\u5efa\u6a21\u578b\u3002</p> <p>\u5b9a\u4e49\u5b8c\u6210\u4e4b\u540e\uff0c\u6a21\u578b\u53ef\u4ee5\u7ed1\u5b9a\u5230\u7ec4\u6216\u8005 API Key\u3002</p> <p></p>"},{"location":"zh/home/deployment/","title":"\u5feb\u901f\u90e8\u7f72","text":"<p>\u4f7f\u7528 Cloudformation \u5feb\u901f\u90e8\u7f72\u3002</p>"},{"location":"zh/home/deployment/#_2","title":"\u652f\u6301\u7684\u533a\u57df","text":"<p>Cloudformation \u6a21\u677f\u5df2\u5728\u4ee5\u4e0b\u533a\u57df\u9a8c\u8bc1\uff1a</p> <ul> <li>us-east-1</li> <li>us-west-2</li> </ul>"},{"location":"zh/home/deployment/#_3","title":"\u5148\u51b3\u6761\u4ef6","text":"<p>\u5728\u60a8\u7684\u533a\u57df\u542f\u7528 Claude 3 Sonnet \u6216 Haiku - \u5982\u679c\u60a8\u662f\u7b2c\u4e00\u6b21\u4f7f\u7528 Anthropic \u6a21\u578b\uff0c\u8bf7\u8f6c\u5230\u00a0Amazon Bedrock \u63a7\u5236\u53f0\u00a0\u5e76\u5728\u5de6\u4e0b\u89d2\u7a97\u683c\u4e2d\u9009\u62e9\u00a0\u6a21\u578b\u8bbf\u95ee\u3002\u5355\u72ec\u8bf7\u6c42 Claude 3 Sonnet \u6216 Haiku \u7684\u8bbf\u95ee\u6743\u9650\u3002</p>"},{"location":"zh/home/deployment/#_4","title":"\u7ec4\u4ef6","text":"<p>\u6b64 Cloudformation \u6a21\u677f\u5c06\u5305\u542b\u4ee5\u4e0b\u5173\u952e\u7ec4\u4ef6\uff1a</p> <ul> <li>Cloudfront</li> <li>Lambda \u6216 EC2 \u4e0a\u7684 BRConnector</li> <li>EC2 \u4e0a\u7684 RDS PostgreSQL \u6216 PostgreSQL \u5bb9\u5668 \u6216\u8005 \u4e0d\u9700\u8981\u6570\u636e\u5e93</li> <li>\u542f\u7528\u4e86\u62c9\u53d6\u7f13\u5b58\u7684 ECR</li> </ul>"},{"location":"zh/home/deployment/#_5","title":"\u90e8\u7f72\u6a21\u5f0f","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u63a8\u8350\u7684\u90e8\u7f72\u6a21\u5f0f:</p> <ul> <li>\u5728 EC2 \u4e0a\u90e8\u7f72 BRConnector \uff0c\u5e76\u96c6\u6210\u6570\u636e\u5e93\uff0c\u5728 EC2 \u524d\u9762\u653e\u7f6e Cloudfront</li> <li>\u5728 Lambda \u4e0a\u90e8\u7f72 BRConnector \uff0c\u4f7f\u7528\u72ec\u7acb\u6570\u636e\u5e93(\u6216\u65e0\u6570\u636e\u5e93)\uff0c\u5728\u516c\u5f00\u7684 Lambda \u51fd\u6570 URL \u524d\u9762\u653e\u7f6e Cloudfront</li> <li>\u5728 Lambda \u4e0a\u90e8\u7f72 BRConnector \uff0c\u4f7f\u7528\u72ec\u7acb\u6570\u636e\u5e93(\u6216\u65e0\u6570\u636e\u5e93)\uff0c\u5728\u4f7f\u7528 AWS_IAM \u6388\u6743\u7c7b\u578b\u7684 Lambda \u51fd\u6570 URL \u524d\u9762\u653e\u7f6eCloudfront</li> <li></li> </ul>"},{"location":"zh/home/deployment/#_6","title":"\u90e8\u7f72\u6307\u5357","text":"<ul> <li>\uff08\u53ef\u9009\uff09\u5982\u679c\u9700\u8981\u4f7f\u7528 AWS_IAM \u6388\u6743\u7c7b\u578b\u7684 Lambda \u51fd\u6570 URL \uff0c\u90e8\u7f72 lambda@edge \u5728 us-east-1 \u533a\u57df\uff0c\u7528\u4e8e Cloudfront viewer request\u3002\u6210\u529f\u90e8\u7f72\u540e\uff0c\u4ece\u8f93\u51fa\u9875\u9762\u83b7\u53d6 Lambda \u7248\u672c ARN\u3002</li> </ul> <ul> <li>\u90e8\u7f72 BRConnector \u5728\u4efb\u4f55\u652f\u6301\u7684\u533a\u57df\u3002\u4e0b\u8f7d quick-build-brconnector.yaml \u5e76\u4e0a\u4f20\u5230 Cloudformation \u63a7\u5236\u53f0\u6216\u5355\u51fb\u6b64\u6309\u94ae\u76f4\u63a5\u542f\u52a8\u3002</li> </ul> <ul> <li>VPC \u53c2\u6570</li> <li>\u9009\u62e9\u521b\u5efa\u65b0 VPC \u6216\u73b0\u6709 VPC</li> <li>\u4e3a EC2 \u9009\u62e9\u4e00\u4e2a\u516c\u5171\u5b50\u7f51\uff0c\u4e3a Lambda \u548c RDS \u9009\u62e9\u4e00\u4e2a\u79c1\u6709\u5b50\u7f51\uff08 RDS \u5b50\u7f51\u7ec4\u81f3\u5c11\u9700\u8981 2 \u4e2a\u53ef\u7528\u533a\uff09</li> </ul> <ul> <li>\u8ba1\u7b97\u53c2\u6570</li> <li>\u9009\u62e9 BRConnector\u3001Lambda \u6216 EC2 \u7684\u8ba1\u7b97\u7c7b\u578b</li> <li>\u5bf9\u4e8eEC2 \u8bbe\u7f6e<ul> <li>\u73b0\u5728\u4ec5\u652f\u6301 Amazon Linux 2023</li> <li>\u60a8\u53ef\u4ee5\u9009\u62e9\u5728\u540c\u4e00\u4e2a EC2 \u5b9e\u4f8b\u4e2d\u4ee5\u5bb9\u5668\u65b9\u5f0f\u521b\u5efa PostgreSQL\uff08DatabaseMode \u8bbe\u7f6e\u4e3a <code>EC2Integrated</code>\uff09\uff0c\u6216\u8005\u521b\u5efa\u72ec\u7acb\u7684 RDS PostgreSQL \u4f5c\u4e3a\u540e\u7aef\u6570\u636e\u5e93\uff08DatabaseMode \u8bbe\u7f6e\u4e3a <code>Standalone</code>\uff09</li> </ul> </li> <li>\u5bf9\u4e8e Lambda \u8bbe\u7f6e<ul> <li><code>EcrRepo</code> \u5b9a\u4e49\u60a8\u7684\u79c1\u6709\u5b58\u50a8\u5e93\u540d\u79f0\u524d\u7f00\u5b57\u7b26\u4e32</li> <li><code>LambdaArch</code> \u5b9a\u4e49 Lambda \u67b6\u6784\u662f arm64 \u6216 amd64 </li> <li>\u5982\u679c <code>LambdaEdgeVersionArn</code> \u4e3a\u7a7a\uff0c\u5c06\u4f7f\u7528 PUBLIC \u51fd\u6570 URL\u3002\u8bf7\u786e\u4fdd\u6b64\u5b89\u5168\u8bbe\u7f6e\u662f\u53ef\u63a5\u53d7\u7684</li> <li>\u53e6\u5916\uff0c\u60a8\u53ef\u4ee5\u9009\u62e9\u521b\u5efa RDS PostgreSQL \u6570\u636e\u5e93\uff08DatabaseMode \u8bbe\u7f6e\u4e3a <code>Standalone</code>\uff09\uff0c\u6216\u8005\u4e0d\u4f7f\u7528\u6570\u636e\u5e93\uff08DatabaseMode \u8bbe\u7f6e\u4e3a <code>NoDB</code>\uff09</li> </ul> </li> </ul> <ul> <li>PostgreSQL \u53c2\u6570</li> <li>DatabaseMode\u9009\u62e9\uff1a<ul> <li><code>EC2Integrated</code> \u2013 \u5728 EC2 \u4e2d\u90e8\u7f72 PostgreSQL \u5bb9\u5668</li> <li><code>Standalone</code> \u2013 \u90e8\u7f72 RDS PostgreSQL</li> <li><code>NoDB</code> \u2013 \u4e0d\u90e8\u7f72\u4efb\u4f55\u540e\u7aef\u6570\u636e\u5e93\uff0c\u5728\u6b64\u6a21\u5f0f\u4e0b\u53ea\u6709 ADMIN KEY \u53ef\u4ee5\u8bbf\u95ee\u9ed8\u8ba4\u6a21\u578b</li> </ul> </li> <li>\u5c06 PerformanceMode \u8bbe\u7f6e\u4e3a <code>true</code>\uff0c\u804a\u5929\u5386\u53f2\u5c06\u4e0d\u4f1a\u88ab\u4fdd\u5b58</li> <li>\u9ed8\u8ba4 PostgreSQL \u5bc6\u7801\u4e3a <code>mysecretpassword</code></li> </ul> <ul> <li>\u8c03\u8bd5\u53c2\u6570</li> <li>\u5982\u679c\u9009\u62e9 Lambda \u4f5c\u4e3a ComputeType\uff0c\u5219\u53ef\u4ee5\u9009\u62e9\u5728\u6240\u6709\u8d44\u6e90\u90e8\u7f72\u6210\u529f\u540e\u5220\u9664 EC2\u3002\u6b64 EC2 \u6682\u65f6\u7528\u4e8e\u7f16\u8bd1\u548c\u6784\u5efa BRConnector \u5bb9\u5668\u3002</li> <li>\u5982\u679c\u9009\u62e9 EC2 \u4f5c\u4e3a ComputeType\uff0c\u8bf7\u4e0d\u8981\u5220\u9664 EC2</li> <li>\u5982\u679c\u5c06 AutoUpdateBRConnector \u8bbe\u7f6e\u4e3a <code>true</code>\uff0c\u5219\u4f1a\u5c06\u4e00\u4e2a\u811a\u672c\u6dfb\u52a0\u5230 codebuild \u4e2d</li> </ul> <ul> <li>\u76f4\u5230\u90e8\u7f72\u6210\u529f\uff0c\u8f6c\u5230\u8f93\u51fa\u9875\u9762\u5e76\u5c06 Cloudfront URL \u548c First User Key \u590d\u5236\u5230\u60a8\u7684 Bedrock \u5ba2\u6237\u7aef\u8bbe\u7f6e\u9875\u9762\u3002</li> </ul> <ul> <li>\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528 SSM \u4f1a\u8bdd\u7ba1\u7406\u5668\u8fde\u63a5\u5230 <code>BRConnector</code> EC2 \u5b9e\u4f8b (docs)</li> </ul>"},{"location":"zh/home/deployment/#brconnector","title":"\u66f4\u65b0 BRConnector","text":""},{"location":"zh/home/deployment/#autoupdate-true","title":"AutoUpdate \u4e3a true","text":"<ul> <li>\u68c0\u67e5\u60a8\u7684 ECR \u8bbe\u7f6e\uff0c\u5982\u679c\u5728\u62c9\u53d6\u7f13\u5b58\u9875\u9762\u4e2d\u6709\u89c4\u5219\uff0c\u5219\u60a8\u5df2\u542f\u7528\u6b64\u529f\u80fd\u4ee5\u4f7f\u7528\u4e0a\u6e38\u5b58\u50a8\u5e93\u81ea\u52a8\u66f4\u65b0 ECR \u6620\u50cf\u3002</li> <li>\u8f6c\u5230 codebuild \u9875\u9762\uff0c\u5c06\u89e6\u53d1\u4e00\u4e2a\u9879\u76ee\u5b9a\u671f\u6784\u5efa\u4ee5\u81ea\u52a8\u66f4\u65b0\u60a8\u7684 lambda \u6620\u50cf</li> <li>EC2 \u4e2d\u7684\u6620\u50cf\u5c06\u4f7f\u7528 SSM \u4e2d\u7684\u72b6\u6001\u7ba1\u7406\u5668\u81ea\u52a8\u66f4\u65b0\u3002</li> </ul>"},{"location":"zh/home/deployment/#autoupdate-false","title":"AutoUpdate \u4e3a false","text":"<ul> <li>\u68c0\u67e5\u60a8\u7684 ECR \u8bbe\u7f6e\uff0c\u5982\u679c\u5728\u62c9\u53d6\u7f13\u5b58\u9875\u9762\u4e2d\u6709\u89c4\u5219\uff0c\u5219\u60a8\u5df2\u542f\u7528\u6b64\u529f\u80fd\u4ee5\u4f7f\u7528\u4e0a\u6e38\u5b58\u50a8\u5e93\u81ea\u52a8\u66f4\u65b0 ECR \u6620\u50cf\u3002</li> <li>\u8f6c\u5230 codebuild \u9875\u9762\uff0c\u53ef\u4ee5\u89e6\u53d1\u4e00\u4e2a\u9879\u76ee\u6765\u624b\u52a8\u66f4\u65b0\u60a8\u7684 lambda \u6620\u50cf\u3002\u5355\u51fb\u201c\u5f00\u59cb\u6784\u5efa\u201d\u4ee5\u66f4\u65b0 lambda \u6620\u50cf\u3002</li> <li>\u7531\u4e8e\u672a\u521b\u5efa\u5173\u8054\uff0cEC2 \u4e2d\u7684\u6620\u50cf\u5c06\u4e0d\u4f1a\u4f7f\u7528 SSM \u4e2d\u7684\u72b6\u6001\u7ba1\u7406\u5668\u81ea\u52a8\u66f4\u65b0\u3002\u53c2\u8003 SSM \u4e2d\u7684\u6587\u6863\u4ee5\u624b\u52a8\u5728 EC2 \u4e2d\u6267\u884c\u547d\u4ee4\u3002</li> </ul>"},{"location":"zh/home/deployment/#ecr-cfn","title":"\u672a\u542f\u7528\u62c9\u53d6\u7f13\u5b58\u7684 ECR\uff08\u4ec5\u9002\u7528\u4e8e\u4ee5\u524d\u7684 cfn \u7248\u672c\uff09","text":"<ul> <li>\u5982\u679c\u60a8\u672a\u542f\u7528 ECR \u62c9\u53d6\u7f13\u5b58\uff0c\u8bf7\u6309\u7167\u6b64\u811a\u672c\u624b\u52a8\u66f4\u65b0\u6620\u50cf</li> </ul> <pre><code>export AWS_DEFAULT_REGION=us-west-2\nexport ACCOUNT_ID=00000000000000\nexport PrivateECRRepository=your_private_repo_name\n\naws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com\n\n# pull/tag/push arm64 image for lambda\ndocker pull --platform=linux/arm64 public.ecr.aws/x6u9o2u4/sample-connector-for-bedrock-lambda\ndocker tag public.ecr.aws/x6u9o2u4/sample-connector-for-bedrock-lambda ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64\ndocker push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64\n\n# pull/tag/push amd64 image for lambda\ndocker pull --platform=linux/amd64 public.ecr.aws/x6u9o2u4/sample-connector-for-bedrock-lambda\ndocker tag public.ecr.aws/x6u9o2u4/sample-connector-for-bedrock-lambda ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64\ndocker push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64\n\n# create/push manifest file\ndocker manifest create ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest --amend ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64 --amend ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64\ndocker manifest annotate ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:arm64 --os linux --arch arm64\ndocker manifest annotate ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:amd64 --os linux --arch amd64\ndocker manifest push ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${PrivateECRRepository}:latest\n</code></pre> <ul> <li>\u4f7f\u7528\u6b63\u786e\u7684\u67b6\u6784\u66f4\u65b0 lambda \u6620\u50cf</li> </ul>"},{"location":"zh/home/deployment/#ec2-brconnector","title":"\u8fd0\u884c\u5728 EC2 \u4e0a\u7684 BRConnector","text":"<ul> <li>\u767b\u5f55\u5230 ec2 \u4ee5\u66f4\u65b0\u672c\u5730\u6620\u50cf\u5e76\u91cd\u65b0\u542f\u52a8 brconnector \u5bb9\u5668</li> </ul> <pre><code>aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws\ndocker pull public.ecr.aws/x6u9o2u4/sample-connector-for-bedrock\ndocker restart brconnector\n</code></pre>"},{"location":"zh/home/deployment/#postgresql","title":"\u8fc1\u79fb\u5230\u65b0\u7684 PostgreSQL \u6570\u636e\u5e93","text":"<p>\u60a8\u53ef\u4ee5\u9009\u62e9\u5728 ECR \u6216 RDS \u4e0a\u7684\u5bb9\u5668\u4e2d\u76f4\u63a5\u90e8\u7f72 PostgreSQL\uff0c\u8fd9\u91cc\u5217\u51fa\u4e86\u4e00\u4e9b\u547d\u4ee4\u4f9b\u60a8\u5728 PG \u4e2d\u8fc1\u79fb\u6570\u636e\u7684\u53c2\u8003\u3002</p>"},{"location":"zh/home/deployment/#brconnector-ec2-pg-rds","title":"\u5c06 BRConnector \u6570\u636e\u4ece EC2 \u4e0a\u7684 PG \u5bb9\u5668\u8fc1\u79fb\u5230 RDS","text":"<ul> <li> <p>\u5217\u51fa\u60a8\u7684\u6570\u636e\u5e93\u540d\u79f0 <pre><code>docker exec -it postgres psql -U postgres\npostgres=&gt; \\l # \u5217\u51fa\u6570\u636e\u5e93\npostgres=&gt;\n</code></pre></p> </li> <li> <p>dump \u6574\u5e93 <pre><code>docker exec -i postgres pg_dump -U postgres -d brproxy_dbname &gt; db.sql\n</code></pre></p> </li> <li> <p>\u5728 RDS \u4e2d\u627e\u5230\u60a8\u7684 PG \u7aef\u70b9 (Endpoint)</p> </li> <li> <p>\u6211\u4eec\u5c06\u5728\u60a8\u7684\u672c\u5730\u4e34\u65f6\u8fd0\u884c\u4e00\u4e2a docker \u4f5c\u4e3a postgres \u5ba2\u6237\u7aef\uff0c\u800c\u4e0d\u662f\u5b89\u88c5 postgresql <pre><code>POSTGRES_VERSION=16\ndocker run --name postgres-client \\\n-e POSTGRES_PASSWORD=postgres-client-tmp-password \\\n-d postgres:${POSTGRES_VERSION}\n</code></pre></p> </li> <li> <p>\u590d\u5236\u6574\u5e93\u5bfc\u51fa\u7684\u6587\u4ef6\u5230\u65b0\u7684\u5bb9\u5668\u4e2d <pre><code>docker cp db.sql postgres-client:/tmp/\n</code></pre></p> </li> <li> <p>\u521b\u5efa\u76ee\u6807\u6570\u636e\u5e93\uff0c\u7136\u540e\u5bfc\u5165\u6570\u636e <pre><code>docker exec -it postgres-client sh \n# \n# psql -U postgres -h pg-endpoint.xxx.us-west-2.rds.amazonaws.com \nPassword for user postgres:\npostgres=&gt; CREATE DATABASE brconnector_db;\npostgres=&gt; ^D\n# psql -U postgres -h pg-endpoint.xxx.us-west-2.rds.amazonaws.com -d brconnector_db &lt;/tmp/db.sql\nPassword for user postgres:\n# \n</code></pre></p> </li> <li>\u6e05\u7406\u4e34\u65f6 docker on local <pre><code>docker rm -f postgres-client\n</code></pre></li> </ul>"},{"location":"zh/home/deployment/#_7","title":"\u4e0d\u652f\u6301\u7684\u533a\u57df","text":"<p>\u4e2d\u56fd\u533a\u57df\u6682\u65f6\u4e0d\u652f\u6301\u90e8\u7f72\uff0c\u7531\u4e8e\uff1a</p> <ul> <li>Lambda URL \u5728\u4e2d\u56fd\u533a\u57df\u4e0d\u652f\u6301</li> <li>Cloudfront \u5728\u4e2d\u56fd\u533a\u57df\u9700\u8981\u4f7f\u7528\u5df2\u5907\u6848\u7684\u81ea\u6709\u57df\u540d</li> <li>ALB \u66b4\u9732 443 \u7aef\u53e3\u9700\u8981\u4f7f\u7528\u5df2\u5907\u6848\u7684\u81ea\u6709\u57df\u540d</li> </ul>"},{"location":"zh/home/faq/#api","title":"\u5982\u4f55\u4f7f\u7528\u804a\u5929 API \u4e2d\u4e0a\u4f20\u6587\u6863","text":"<p>\u8bf7\u6ce8\u610f\uff1a\u5f53\u524d\u53ea\u6709 Claude 3 \u652f\u6301\u6587\u6863\u4e0a\u4f20\u3002</p> <p>\u4e0a\u4f20\u6587\u6863\u7684 API \u58f0\u660e\u5982\u4e0b\uff1a</p> <pre><code>POST /v1/chat/completions\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"messages\":[{\n    \"role\":\"user\",\n    \"content\":[\n      {\"type\":\"text\",\"text\":\"Summary this doc\"},\n      {\n        \"type\":\"doc\",\n        \"doc\":{\n          \"name\":\"4147b64a76039b4b75264726ebf6143f9e132b1e\",\n          \"format\":\"pdf\",\"size\":59368,\n          \"source\":{\n            \"bytes\":{\n              \"0\":37,\"1\":80,\"2\":68,\"3\":70,\"4\":45,\"5\":49,...,\"59367\":70\n            }\n          }\n        }\n      }\n    ]\n  }],\n  \"stream\":true,\n  \"model\":\"claude-sonnet-3\",\n  \"temperature\":0.5,\n  \"presence_penalty\":0,\n  \"frequency_penalty\":0,\n  \"top_p\":1,\n  \"max_tokens\":4000\n}\n</code></pre> <p>\u9700\u8981\u4f7f\u7528 Javascript \u5c06\u672c\u5730\u7684\u6587\u6863\u8f6c\u5316\u6210 bytes json \u7684\u5f62\u5f0f\u3002</p>"},{"location":"zh/home/faq/#_1","title":"\u5982\u4f55\u914d\u7f6e\u9ed8\u8ba4\u6a21\u578b\u652f\u6301\uff1f","text":"<p>\u60a8\u53ea\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6a21\u578b\uff0c\u540d\u79f0\u4e3a default \u5373\u53ef\u3002</p>"},{"location":"zh/home/faq/#_2","title":"\u53ef\u4ee5\u753b\u56fe\u5417\uff1f","text":"<p>\u53ef\u4ee5\uff0c\u914d\u7f6e\u5e76\u4f7f\u7528 painter \u6216\u8005 nova-canvas \u4e3a\u63d0\u4f9b\u5668\u7684\u6a21\u578b\u5373\u53ef\u3002</p>"},{"location":"zh/home/faq/#_3","title":"\u6a21\u578b\u901a\u914d","text":"<p>\u73b0\u5728\u4f60\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e2a\u81ea\u5b9a\u4e49\u6a21\u578b\uff0c\u5e76\u4e14\u5728 API \u7684\u8c03\u7528\u4e2d\u7684\u6a21\u578b\u540d\u5b57\u4e2d\u4f7f\u7528\u659c\u6760\u3002</p> <p>\u5982\u4e0b\u7684 API \u8c03\u7528\u793a\u4f8b\u3002</p> <pre><code>POST  {{hostLcoal}}/chat/completions\nAuthorization: Bearer {{key}}\nContent-Type: application/json\n\n{\n    \"model\":\"bedrock/us.amazon.nova-micro-v1:0\",\n    \"messages\": [\n        {\n            \"role\": \"user\",\n            \"content\": \"\u6765\u4e00\u4e2a\u53ea\u6709\u7a0b\u5e8f\u5458\u80fd\u542c\u61c2\u7684\u7b11\u8bdd\"\n        }\n    ],\n    \"max_tokens\": 5120,\n    \"stream\": true\n}\n</code></pre> <p>\u8981\u4f7f\u7528\u4e0a\u8ff0\u65b9\u6cd5\uff0c\u4f60\u5fc5\u987b\uff1a</p> <ol> <li>\u9700\u8981\u4f60\u5728\u540e\u53f0\u5b9a\u4e00\u4e2a model name \u4e3a <code>bedrock</code> \u7684\u81ea\u5b9a\u4e49\u6a21\u578b\u3002</li> <li>\u659c\u6760\u540e\u9762\u7684\u6a21\u578b\u540d\u5b57\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u5fc5\u987b\u4e0e\u539f\u5382\u5546\u7684 \u6a21\u578b\u540d\u5b57\u4e00\u81f4\u3002</li> <li>Provider \u4f1a\u9996\u9009\u8003\u8651\u659c\u6760\u540e\u9762\u7684\u6a21\u578b\u540d\u5b57\uff0c\u7136\u540e\u8003\u8651\u540e\u53f0\u914d\u7f6e\u4e2d\u7684\u6a21\u578b\u540d\u5b57\uff0c\u6700\u540e\u4f1a\u8003\u8651\u539f\u6837\u4f20\u8f93\u3002</li> </ol> <p>\u5f53\u524d\u6709\u652f\u6301\u8fd9\u4e2a\u7528\u6cd5\u7684 Provider \u6709\uff1a<code>bedrock_converse</code>, <code>openai_compatiable</code></p>"},{"location":"zh/home/quick-start/","title":"\u5feb\u901f\u542f\u52a8","text":""},{"location":"zh/home/quick-start/#1","title":"1. \u51c6\u5907\u670d\u52a1\u5668","text":"<p>\u5728 AWS \u4e0a\u542f\u52a8\u4e00\u4e2a EC2 \u5b9e\u4f8b\u6216\u4efb\u4f55\u5176\u4ed6\u652f\u6301 Docker \u7684\u670d\u52a1\u5668\u3002</p>"},{"location":"zh/home/quick-start/#2-docker-postgres","title":"2. \u4f7f\u7528 Docker \u8fd0\u884c Postgres","text":"<p>\u4f7f\u7528\u4ee5\u4e0bshell\u547d\u4ee4\u542f\u52a8\u4e00\u4e2aDocker\u5bb9\u5668\u6765\u6258\u7ba1Postgres\u3002\u8bf7\u6ce8\u610f\u4f7f\u7528\u60a8\u81ea\u5df1\u7684\u5bc6\u7801\u6765\u66ff\u6362<code>XXX</code>:</p> <pre><code>docker run --name postgres \\\n  -e POSTGRES_PASSWORD=XXX \\\n  -p 5432:5432 \\\n  -d postgres\n</code></pre> <p>\u7136\u540e\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a <code>brconnector_db</code> \u7684\u6570\u636e\u5e93\u3002</p> <p>\u9996\u5148\uff0c\u8fde\u63a5\u5230 prostgress \u5bb9\u5668:</p> <pre><code>docker exec -it postgres psql -U postgres\n</code></pre> <p>\u7136\u540e\uff0c\u5728 postgres \u7684 SQL \u547d\u4ee4\u884c\u4e2d\uff0c\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u521b\u5efa\u6570\u636e\u5e93:</p> <pre><code>CREATE DATABASE brconnector_db;\n</code></pre> <p>\u6570\u636e\u5e93\u540d\u79f0\u4e0d\u4e00\u5b9a\u8981\u662f <code>brconnector_db</code>\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4efb\u4f55\u6709\u6548\u7684\u6570\u636e\u5e93\u540d\u79f0\u3002</p> <p>\u5982\u679c\u4f60\u4f7f\u7528\u81ea\u5df1\u7684\u6570\u636e\u5e93\u540d\u79f0,\u8bf7\u786e\u4fdd\u8bb0\u4f4f\u6570\u636e\u5e93\u540d\u79f0,\u5e76\u5c06 <code>brconnector_db</code> \u66ff\u6362\u4e3a\u4f60\u7684\u6570\u636e\u5e93\u540d\u79f0\u3002</p>"},{"location":"zh/home/quick-start/#3-docker","title":"3. \u4f7f\u7528 Docker \u542f\u52a8","text":"<p>\u76f4\u63a5\u8fd0\u884c\u4ee5\u4e0b docker \u547d\u4ee4\u6765\u542f\u52a8\u8fde\u63a5\u5668\u5bb9\u5668\u3002</p> <p>\u786e\u4fdd\u5c06\u8bbf\u95ee\u5bc6\u94a5\u3001\u79d8\u5bc6\u5bc6\u94a5\u3001\u533a\u57df\u7684\u503c\u66ff\u6362\u4e3a\u6b63\u786e\u7684\u503c\u3002</p> <p>\u800c\u4e14,\u91cd\u8981\u7684\u662f!\u5c06 ADMIN_API_KEY \u7684\u503c\u66ff\u6362\u4e3a\u4e00\u4e2a\u590d\u6742\u7684\u5bc6\u94a5,\u800c\u4e0d\u662f\u4f7f\u7528\u793a\u4f8b\u4e2d\u7684\u7b80\u5355\u5bc6\u94a5\u3002</p> <pre><code>docker run --name brconnector \\\n --restart always --pull always \\\n -p 8866:8866 \\\n -e AWS_ACCESS_KEY_ID=xxxx \\\n -e AWS_SECRET_ACCESS_KEY=xxxxx \\\n -e AWS_DEFAULT_REGION=us-east-1 \\\n -e PGSQL_HOST=172.17.0.1 \\\n -e PGSQL_DATABASE=brconnector_db \\\n -e PGSQL_USER=postgres \\\n -e PGSQL_PASSWORD=mysecretpassword \\\n -e ADMIN_API_KEY=br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \\\n -d cloudbeer/sample-connector-for-bedrock\n</code></pre>"},{"location":"zh/home/quick-start/#4","title":"4. \u6d4b\u8bd5","text":"<p>\u73b0\u5728,\u60a8\u6709\u4e86\u7b2c\u4e00\u4e2a\u7ba1\u7406\u5458\u7528\u6237,\u5176API\u5bc6\u94a5\u4e3a\u201dbr_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\u201d\u3002</p> <p>\u4f7f\u7528<code>curl</code>\u547d\u4ee4\u5e76\u5e26\u4e0aAPI\u5bc6\u94a5\u6765\u6d4b\u8bd5\u670d\u52a1\u5668:</p> <pre><code>curl \"http://localhost:8866/admin/api-key/list\" \\\n  -H \"Authorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" \n</code></pre> <p>\u60a8\u4f1a\u5f97\u5230\u5982\u4e0b\u7684\u8f93\u51fa:</p> <pre><code>{\"success\":true,\"data\":{\"items\":[],\"total\":\"0\",\"limit\":20,\"offset\":0}}\n</code></pre>"},{"location":"zh/home/quick-start/#5","title":"5. \u521b\u5efa\u7b2c\u4e00\u4e2a\u7ba1\u7406\u5458\u7528\u6237","text":"<p>\u4e0a\u9762\u914d\u7f6e\u7684 API_KEY \u4ec5\u7528\u4e8e\u542f\u52a8\u670d\u52a1\u5668\u548c\u521b\u5efa\u7b2c\u4e00\u4e2a\u7ba1\u7406\u5458\u7528\u6237\u3002</p> <p>\u8be5 API_KEY \u5e76\u975e\u8bbe\u8ba1\u7528\u4e8e\u4f5c\u4e3a\u7ba1\u7406\u5458\u7528\u6237\u6216\u666e\u901a\u7528\u6237\u4f7f\u7528\u3002</p> <p>\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u521b\u5efa\u7b2c\u4e00\u4e2a\u7ba1\u7406\u5458\u7528\u6237:</p> <pre><code>curl -X POST \"http://localhost:8866/admin/api-key/apply\" \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Authorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\" \\\n     -d '{\"name\": \"adminuser\",\"group_id\": 1,\"role\": \"admin\",\"email\": \"\", \"month_quota\":\"20\"}'\n</code></pre> <p>\u8f93\u51fa\u5927\u6982\u5982\u4e0b:</p> <pre><code>{\"success\":true,\"data\":{\"id\":1,\"name\":\"adminuser\",\"email\":\"\",\"api_key\":\"br-someotherkeyvaluexxxxx\",\"role\":\"admin\",\"month_quota\":\"20.0000000000\",\"balance\":\"0.0000000000\"}}\n</code></pre> <p>\u8bb0\u5f55\u65b0\u7528\u6237\u7684\u65b0 api_key, \u6b64 api_key \u53ef\u7528\u4e8e\u914d\u7f6e\u60a8\u7684\u5ba2\u6237\u7aef\u8fdb\u884c\u804a\u5929\u3002 \u6b64 api_key \u4e5f\u53ef\u7528\u4e8e\u767b\u5f55 BRConnector\u7684\u7ba1\u7406 WebUI \u6765\u7ba1\u7406\u5176\u4ed6 api_key\u3002</p>"},{"location":"zh/home/quick-start/#6","title":"6. \u914d\u7f6e\u5ba2\u6237\u7aef","text":"<p>\u60a8\u5e94\u8be5\u4f7f\u7528 HTTPS \u66b4\u9732\u8fde\u63a5\u5668\u670d\u52a1\u5668\u3002</p> <p>\u5728 AWS \u4e0a\u4e00\u79cd\u7b80\u5355\u7684\u65b9\u5f0f\u662f\u521b\u5efa CloudFront CDN \u6765\u63d0\u4f9b SSL \u652f\u6301\u3002</p> <p>\u6709\u5173\u5728 AWS \u4e0a\u8bbe\u7f6e CloudFront \u7684\u66f4\u591a\u4fe1\u606f,\u8bf7\u53c2\u9605 AWS \u7684\u5b98\u65b9\u6587\u6863\u3002</p> <p>\u6253\u5f00\u4e00\u4e2a\u53ef\u4ee5\u4e3a OpenAI \u5b9a\u4e49 Host \u548c API \u5bc6\u94a5\u7684\u5ba2\u6237\u7aef\u3002</p> <p>\u5728 \u201cHost\u201d \u5b57\u6bb5\u4e2d\u8f93\u5165 CloudFront \u7f51\u5740\u3002</p> <p>\u5728\u201dAPK Key\u201d\u5b57\u6bb5\u4e2d, \u8f93\u5165\u6b65\u9aa4 5 \u4e2d\u521b\u5efa\u7684\u7b2c\u4e00\u4e2a\u7ba1\u7406\u5458\u7528\u6237\u7684 API Key\u3002</p> <p>\u7136\u540e,\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u804a\u5929\u7a97\u53e3\u8fdb\u884c\u6d4b\u8bd5\u3002</p> <p>\u5982\u679c\u4e00\u5207\u987a\u5229,\u60a8\u5c31\u53ef\u4ee5\u5f00\u59cb\u804a\u5929\u4e86\u3002</p> <p>Note</p> <p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a https://github.com/aws-samples/sample-client-for-amazon-bedrock \u5ba2\u6237\u7aef\u6765\u6d4b\u8bd5\uff0c\u8bf7\u67e5\u770b\u5982\u4f55\u914d\u7f6e\u3002</p> <p>Since 0.0.8, this client has been built into the docker image. The access address is: <code>http(s)://your-endpoint/brclient/</code></p>"},{"location":"zh/home/quick-start/#7","title":"7. \u540e\u53f0\u7ba1\u7406\u754c\u9762","text":"<p>\u5982\u679c\u60a8\u6ca1\u6709\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf DISABLE_UI,\u60a8\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7 <code>http(s)://your-endpoint/manager/</code> \u8bbf\u95ee BRConnector Web \u7ba1\u7406\u754c\u9762\u3002</p> <p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u521a\u521a\u751f\u6210\u7684API\u5bc6\u94a5\u767b\u5f55\u5e76\u7ba1\u7406\u5b83\u3002\u8bf7\u5c06 <code>http(s)://your-endpoint</code> \u4f5c\u4e3a\u4e3b\u673a\u5730\u5740\u8f93\u5165\u3002</p>"},{"location":"zh/providers/aws-executor/","title":"aws-executor","text":"<p>Since Docker image version 0.0.10</p> <p>AWS \u547d\u4ee4\u884c\u6267\u884c\u5668\u3002</p> <p>\u901a\u8fc7\u6b64 Provider\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u81ea\u7136\u8bed\u8a00\u6267\u884c AWS \u547d\u4ee4\u200b\u200b\u5e76\u83b7\u53d6\u6267\u884c\u7ed3\u679c\u3002</p> <p>\u6267\u884c AWS \u547d\u4ee4\u200b\u200b\u7684\u89d2\u8272\u548c\u8fd0\u884c BRConnector \u7684\u89d2\u8272\u5f53\u524d\u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u60a8\u9700\u8981\u4e3a\u5f53\u524d\u89d2\u8272\u6388\u4e88\u9002\u5f53\u7684\u6743\u9650\u3002</p> <p>Warning</p> <p>\u4e0d\u8981\u4e3a\u5173\u952e\u8d44\u6e90\u6388\u4e88\u5199\u6743\u9650\uff0c\u56e0\u4e3a\u5f53\u524d AI \u89e3\u6790\u7684\u547d\u4ee4\u884c\u5e76\u4e0d\u7a33\u5b9a\u3002\u4f46\u662f\uff0c\u60a8\u4ecd\u7136\u53ef\u4ee5\u53c2\u8003 AI \u5efa\u8bae\u7684\u547d\u4ee4\u884c\u3002</p>"},{"location":"zh/providers/aws-executor/#_1","title":"\u6a21\u578b\u914d\u7f6e","text":"<p>\u53c2\u6570\u914d\u7f6e\u5982\u4e0b\uff1a</p> <p>\u540d\u79f0\uff1asome-model</p> <p>Provider\uff1aaws-executor</p> <p>\u914d\u7f6e\uff1a</p> <pre><code>{\n  \"localLlmModel\": \"claude-3-sonnet\"\n}\n</code></pre> <p>localLlmModel \u5fc5\u987b\u914d\u7f6e\u4e3a\u652f\u6301\u51fd\u6570\u8c03\u7528\u4e14\u5df2\u5b58\u5728\u4e8e BRConnector \u4e2d\u7684\u6a21\u578b\u3002</p> <p>Note</p> <p>\u60a8\u9700\u8981\u914d\u7f6e bedrock-converse \u63d0\u4f9b\u7a0b\u5e8f\u63d0\u4f9b\u7684 claude3+ \u6a21\u578b\uff0c\u5176\u4ed6\u6a21\u578b\u5c1a\u4e0d\u5177\u5907\u51fd\u6570\u8c03\u7528\u529f\u80fd\u3002\u65e9\u671f\u7cfb\u7edf\u4e2d\u9ed8\u8ba4\u7684 claude3 \u6a21\u578b\u4e0d\u662f\u7531 converse \u9a71\u52a8\u7684\u3002\u5982\u679c\u60a8\u4f7f\u7528\u8fd9\u4e9b\u6a21\u578b\uff0c\u5219\u9700\u8981\u5c06\u539f\u59cb\u914d\u7f6e\u7684 Provider \u66f4\u65b0\u4e3a bedrock-converse\u3002\u8bf7\u6ce8\u610f\u5c06\u952e \u2018model_id\u2019 \u4fee\u6539\u4e3a \u2018modelId\u2019\u3002</p> <p>\u5e76\u4e14\u60a8\u5fc5\u987b\u5728 BRConnector \u5bbf\u4e3b\u8fd0\u884c\u73af\u5883\u4e2d\u5b89\u88c5 aws cli v2\u3002</p>"},{"location":"zh/providers/aws-executor/#brclient","title":"BRClient \u4e2d\u7684\u5c4f\u5e55\u622a\u56fe","text":""},{"location":"zh/providers/bedrock-converse/","title":"bedrock-converse","text":"<p>Since Docker image version 0.0.6</p> <p>Amazon Bedrock LLM \u7edf\u4e00\u8c03\u7528\u3002</p> <p>\u5c06\u6d88\u606f\u53d1\u9001\u5230\u6307\u5b9a\u7684 Amazon Bedrock \u6a21\u578b\u3002Converse\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e\u652f\u6301\u6d88\u606f\u7684\u6240\u6709\u6a21\u578b\u517c\u5bb9\u7684\u7edf\u4e00\u63a5\u53e3\u3002\u8fd9\u5141\u8bb8\u60a8\u53ea\u7f16\u5199\u4e00\u6b21\u4ee3\u7801,\u5e76\u5c06\u5176\u7528\u4e8e\u4e0d\u540c\u7684\u6a21\u578b\u3002\u5982\u679c\u67d0\u4e2a\u6a21\u578b\u5177\u6709\u72ec\u7279\u7684\u63a8\u7406\u53c2\u6570,\u60a8\u4e5f\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u72ec\u7279\u7684\u53c2\u6570\u4f20\u9012\u7ed9\u8be5\u6a21\u578b\u3002</p>"},{"location":"zh/providers/bedrock-converse/#_1","title":"\u53c2\u6570\u914d\u7f6e","text":"<p>\u901a\u8fc7\u4e9a\u9a6c\u900aBedrock Converse API\u8c03\u7528\u6a21\u578b\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u6b64\u63d0\u4f9b\u7a0b\u5e8f\u914d\u7f6e\u6240\u6709\u652f\u6301\u7684\u6a21\u578b\u3002</p> <p>\u8fd9\u4e2a\u7f51\u5740 \u89e3\u91ca\u4e86\u5982\u4f55\u4f7f\u7528 Bedrock Converse API \u4ee5\u53ca\u4ed6\u652f\u6301\u7684\u7279\u6027\u3002</p> <p>\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a Provider \u6765\u652f\u6301 Bedrock \u7684\u5927\u8bed\u8a00\u6a21\u578b\u3002</p> Key Type Required Default value Description modelId string Y Model id, \u70b9\u8fd9\u91cc\u67e5\u770b\u5217\u8868 regions string[] or string N [\u201cus-east-1\u201d] \u5982\u679c\u60a8\u5df2\u7ecf\u7533\u8bf7\u5e76\u6307\u5b9a\u4e86\u591a\u4e2a\u5730\u533a,\u90a3\u4e48\u5c06\u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5730\u533a\u8fdb\u884c\u8c03\u7528\u3002\u8fd9\u4e2a\u529f\u80fd\u53ef\u4ee5\u6709\u6548\u7f13\u89e3\u6027\u80fd\u74f6\u9888\u3002 maxTokens number N 1024 \u9ed8\u8ba4\u6700\u5927 tokens \u6570\u91cf\uff0c\u5bf9\u5e94\u6807\u51c6 API \u7684 max_tokens \u53c2\u6570\u3002 \u5982\u679c API \u8bf7\u6c42\u4e2d\u4e0d\u6307\u5b9a\uff0c\u5219\u4f7f\u7528\u6b64\u503c\u3002 thinking boolen N false \u662f\u5426\u5f00\u542f reason/think \u529f\u80fd thinkBudget number N 1024 \u5728\u5f00\u542f thinking \u7684\u60c5\u51b5\u4e0b\uff0c\u63a8\u7406\u90e8\u5206\u5141\u8bb8\u7684\u6700\u5927 tokens \u6570\u91cf <p>bedrock-converse \u7684\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>{\n  \"modelId\": \"us.anthropic.claude-3-7-sonnet-20250219-v1:0\",\n  \"regions\": [\n    \"us-east-1\"\n  ],\n  \"thinking\": true,\n  \"maxTokens\": 64000,\n  \"thinkBudget\": 32000\n}\n</code></pre>"},{"location":"zh/providers/bedrock-converse/#_2","title":"\u8f93\u51fa\u7ed3\u679c","text":"<p>\u8f93\u51fa\u4e2d\u589e\u52a0\u4e86 reasoning_content \u5b57\u6bb5\uff0c\u4e0e deepseek \u7684\u8f93\u51fa\u4fdd\u6301\u4e00\u81f4\u3002\u5982\u4e0b\uff1a</p> <pre><code>data: {\"id\":\"3\",\"created\":1740468210,\"object\":\"text_completion\",\"choices\":[{\"index\":0,\"delta\":{\"role\":\"assistant\",\"content\":\"\",\"reasoning_content\":\"\u4f60\u597d\"},\"finish_reason\":null,\"logprobs\":null}],\"model\":\"sonnet37-think\"}\n...\n</code></pre>"},{"location":"zh/providers/bedrock-deepseek/","title":"bedrock-deepseek","text":"<p>\u81ea Docker \u955c\u50cf\u7248\u672c 0.0.23 \u8d77\u53ef\u7528</p> <p>LLM \u7edf\u4e00\u63a5\u53e3\u3002</p> <p>\u7528\u4e8e\u5411\u90e8\u7f72\u5728 Amazon Bedrock \u4e0a\u7684 DeepSeek \u6a21\u578b\u53d1\u9001\u6d88\u606f\u3002\u6b64\u63d0\u4f9b\u7a0b\u5e8f\u652f\u6301 Think \u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u5728\u8f93\u51fa\u4e2d\u4f1a\u88ab\u6e32\u67d3\u4e3a markdown \u5f15\u7528\u5757\u3002</p>"},{"location":"zh/providers/bedrock-deepseek/#_1","title":"\u914d\u7f6e","text":"<p>\u901a\u8fc7 Amazon Bedrock API \u8c03\u7528 DeepSeek \u6a21\u578b\u3002\u6b64\u63d0\u4f9b\u7a0b\u5e8f\u5141\u8bb8\u60a8\u914d\u7f6e\u548c\u4f7f\u7528\u90e8\u7f72\u5728 Bedrock \u4e0a\u7684 DeepSeek \u6a21\u578b\u3002</p> \u952e \u7c7b\u578b \u662f\u5426\u5fc5\u9700 \u9ed8\u8ba4\u503c \u63cf\u8ff0 modelId string \u662f \u90e8\u7f72\u7684 DeepSeek \u6a21\u578b\u7684 ARN regions string[] \u6216 string \u5426 [\u201cus-east-1\u201d] \u5982\u679c\u60a8\u5df2\u7533\u8bf7\u5e76\u6307\u5b9a\u4e86\u591a\u4e2a\u533a\u57df\uff0c\u5219\u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u533a\u57df\u8fdb\u884c\u8c03\u7528\u3002\u6b64\u529f\u80fd\u53ef\u4ee5\u6709\u6548\u7f13\u89e3\u6027\u80fd\u74f6\u9888\u3002 maxTokens number \u5426 8192 \u9ed8\u8ba4\u7684\u6700\u5927\u4ee4\u724c\u6570\uff0c\u5bf9\u5e94\u6807\u51c6 API \u4e2d\u7684 max_tokens \u53c2\u6570\u3002\u5982\u679c\u5728 API \u4e2d\u672a\u6307\u5b9a\uff0c\u5c06\u4f7f\u7528\u6b64\u503c\u3002 <p>\u914d\u7f6e\u793a\u4f8b\uff1a</p> <pre><code>{\n  \"modelId\": \"arn:aws:sagemaker:region:xxxxx:endpoint/ds-endpoint\",\n  \"regions\": [\n    \"us-west-2\"\n  ],\n  \"maxTokens\": 8192\n}\n</code></pre>"},{"location":"zh/providers/bedrock-knowledge-base/","title":"bedrock-knowledge-base","text":"<p>Bedrock \u77e5\u8bc6\u5e93\u3002</p>"},{"location":"zh/providers/bedrock-knowledge-base/#_1","title":"\u521b\u5efa\u77e5\u8bc6\u5e93\u5b9e\u4f8b","text":"<p>\u53c2\u8003\u6b64\u6587\u6863\uff1a\u521b\u5efa\u77e5\u8bc6\u5e93</p>"},{"location":"zh/providers/bedrock-knowledge-base/#_2","title":"\u6a21\u578b\u5b9a\u4e49","text":"<p>\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>{\n  \"region\": \"&lt;your-region&gt;\",\n  \"summaryModel\": \"claude-3-sonnet\",\n  \"knowledgeBaseId\": \"&lt;your-kb-id&gt;\"\n}\n</code></pre> <ul> <li>knowledgeBaseId\uff1a\u77e5\u8bc6\u5e93 ID\u3002</li> <li>summaryModel\uff1a\u652f\u6301 claude-3-sonnet\u3001claude-3-haiku \u6216 claude-3-opus</li> </ul>"},{"location":"zh/providers/bedrock-knowledge-base/#api","title":"API \u8c03\u7528","text":"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u5e38\u89c4 api \u8c03\u7528\uff0cBedrock \u8fde\u63a5\u5668\u5c06\u5f39\u51fa\u6700\u540e\u4e00\u6761\u6d88\u606f\u4ee5\u4e0e\u77e5\u8bc6\u5e93\u804a\u5929\u3002</p> <pre><code>POST /v1/chat/completions\nContent-Type: application/json\nAuthorization: Bearer br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n{\n  \"model\": \"your-custom-model-name\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"how to protect s3 data?\"\n    }\n  ]\n}\n</code></pre>"},{"location":"zh/providers/bedrock-knowledge-base/#brclient","title":"\u4f7f\u7528 BRClient","text":""},{"location":"zh/providers/continue_coder/","title":"continue-coder","text":"<p>Since Docker image version 0.0.13</p> <p>\u672c Provider \u53ef\u9002\u914d AI \u8f85\u52a9\u7f16\u7a0b\u63d2\u4ef6 Continue \u7684\u81ea\u52a8\u5b8c\u6210\u529f\u80fd\u3002</p>"},{"location":"zh/providers/continue_coder/#_1","title":"\u6a21\u578b\u914d\u7f6e","text":"<pre><code>{\n  \"localLlmModel\": \"claude-3-haiku\"\n}\n</code></pre> Key Type Required Default value Description localLlmModel string Y \u672c\u5730\u6a21\u578b\u7684\u540d\u5b57 <p>\u7136\u540e\u5c06\u6b64\u6a21\u578b\u6388\u6743\u7ed9 \u7ec4 \u6216\u8005 api key.</p>"},{"location":"zh/providers/continue_coder/#continue","title":"Continue \u914d\u7f6e","text":"<p>\u8fdb\u5165\u63d2\u4ef6\u914d\u7f6e\u540e\uff0c\u53c2\u8003\u5982\u4e0b\u914d\u7f6e\u53c2\u6570\uff1a</p> <pre><code>{\n  \"tabAutocompleteModel\": {\n    \"title\": \"Any-title\",\n    \"model\": \"you-defined-model-name\",\n    \"apiKey\": \"br-xxxxxxxxxxxx\",\n    \"contextLength\": 4000,\n    \"apiBase\": \"https://&lt;your-endpoint&gt;/v1/\",\n    \"provider\": \"openai\"\n  },\n  \"tabAutocompleteOptions\": {\n    \"debounceDelay\": 3000,\n    \"multilineCompletions\": \"always\"\n  }\n}\n</code></pre> <p>Note</p> <p>Continue \u7684\u81ea\u52a8\u5b8c\u6210\u529f\u80fd\u5982\u679c\u89e6\u53d1\u4f1a\u7acb\u5373\u6d88\u8017 token\uff0c\u53c2\u6570 <code>debounceDelay</code> \u8bf7\u914c\u60c5\u5ef6\u957f\u3002</p>"},{"location":"zh/providers/introduction/","title":"\u4f7f\u7528 Provider","text":"<p>Provider \u662f\u901a\u8fc7 Model \u5411\u5916\u63d0\u4f9b\u670d\u52a1\u7684\u3002</p> <p>\u9996\u5148\u60a8\u9700\u8981 \u65b0\u5efa\u4e00\u4e2a\u6a21\u578b\u3002</p> <p>\u4ece Provider \u7684\u4e0b\u62c9\u5217\u8868\u91cc\u9009\u62e9\u76f8\u5e94\u7684 Provider\u3002</p> <p>\u4e0d\u540c\u7684 Provider \u5c06\u4f1a\u5bf9\u5e94\u4e0d\u7528\u7684\u914d\u7f6e\u3002</p> <p>\u6b64\u7ae0\u8282\u5c06\u4f1a\u5177\u4f53\u63cf\u8ff0\u6bcf\u4e2a\u6a21\u578b\u7684\u914d\u7f6e\u3002</p>"},{"location":"zh/providers/nova-canvas/","title":"nova-canvas","text":"<p>\u9002\u7528\u4e8e Docker \u955c\u50cf\u7248\u672c 0.0.20 \u53ca\u4ee5\u4e0a</p> <p>\u6b64 Provider \u5b9e\u73b0\u4e86 nova-canvas \u6a21\u578b\u7684\u591a\u79cd\u56fe\u50cf\u5904\u7406\u548c\u751f\u6210\u80fd\u529b\u3002</p>"},{"location":"zh/providers/nova-canvas/#_1","title":"\u914d\u7f6e","text":"<pre><code>{\n  \"regions\": [\"us-east-1\"],\n  \"s3Bucket\": \"&lt;your-bucket&gt;\",\n  \"s3Prefix\": \"&lt;your-prefix&gt;\",\n  \"s3Region\": \"us-east-1\",\n  \"paintModelId\": \"amazon.nova-canvas-v1:0\",\n  \"localLlmModel\": \"claude35\"\n}\n</code></pre> \u952e\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u9ed8\u8ba4\u503c \u63cf\u8ff0 localLlmModel string \u662f - \u9009\u62e9\u652f\u6301\u51fd\u6570\u8c03\u7528\u7684\u672c\u5730\u6a21\u578b paintModelId string \u662f amazon.nova-canvas-v1:0 \u5f53\u524d\u4ec5\u652f\u6301\u6b64\u503c s3Bucket string \u662f - \u7528\u4e8e\u5b58\u50a8\u751f\u6210\u7684\u56fe\u50cf\uff0c\u8bf7\u786e\u4fdd IAM \u6743\u9650\u8bbe\u7f6e\u6b63\u786e s3Prefix string \u5426 - S3 \u524d\u7f00\uff0c\u4e0e\u65e5\u671f\u7ec4\u5408\u5f62\u6210\u6700\u7ec8\u7684 S3 \u952e s3Region string \u662f - S3 \u5b58\u50a8\u6876\u6240\u5728\u533a\u57df regions string[] \u5426 [\u201cus-east-1\u201d] paintModelId \u53ef\u7528\u7684\u533a\u57df"},{"location":"zh/providers/nova-canvas/#_2","title":"\u529f\u80fd\u6982\u8ff0","text":"<p>\u652f\u6301\u4f7f\u7528\u81ea\u7136\u8bed\u8a00\u8fdb\u884c\u591a\u8f6e\u56fe\u50cf\u5904\u7406\u5bf9\u8bdd\u3002\u4e3b\u8981\u529f\u80fd\u5305\u62ec\uff1a</p> \u529f\u80fd \u4efb\u52a1\u7c7b\u578b \u793a\u4f8b \u6ce8\u610f\u4e8b\u9879 \u6587\u751f\u56fe TEXT_IMAGE \u201c\u751f\u6210\u4e00\u53ea\u53ef\u7231\u7684\u5c0f\u732b\u201d - \u56fe\u751f\u56fe TEXT_IMAGE \u201c\u53c2\u8003\u6b64\u56fe\u751f\u6210\u4e00\u53ea\u5c0f\u732b\uff1ahttps(s3)://url\u2026\u201d \u53ef\u80fd\u89e6\u53d1 IMAGE_VARIATION \u53bb\u9664\u80cc\u666f BACKGROUND_REMOVAL \u201c\u79fb\u9664\u6b64\u56fe\u7247\u80cc\u666f\uff1ahttps(s3)://url\u2026\u201d - \u66f4\u6539\u524d\u666f INPAINTING \u201c\u5c06\u56fe\u4e2d\u7684\u5973\u6027\u6a21\u7279\u6362\u6210\u4e9a\u6d32\u6a21\u7279\u201d \u9700\u660e\u786e\u6307\u51fa\u8981\u66f4\u6539\u7684\u524d\u666f\u5bf9\u8c61\u3002\u591a\u8f6e\u5bf9\u8bdd\u4e2d\u5982\u679c\u53ef\u4ee5\u63a8\u6d4b\u51fa\u524d\u666f\uff0c\u53ef\u4ee5\u65e0\u9700\u6307\u5b9a \u66f4\u6539\u80cc\u666f OUTPAINTING \u201c\u5c06\u56fe\u4e2d\u5973\u6027\u6a21\u7279\u7684\u80cc\u666f\u6362\u6210\u5ba4\u5185\u573a\u666f\u201d - \u751f\u6210\u53d8\u4f53 IMAGE_VARIATION \u201c\u57fa\u4e8e\u4e0a\u56fe\u751f\u6210\u4e00\u4e9b\u53d8\u4f53\u201d - \u56fe\u7247\u4e0a\u8272 COLOR_GUIDED_GENERATION \u201c\u7ed9\u56fe\u7247\u6dfb\u52a0\u7ea2\u6a59\u8272\u8c03\u201d - <p>\u6b64\u5916\uff0c\u60a8\u53ef\u4ee5\u5728\u5bf9\u8bdd\u4e2d\u6307\u5b9a\u751f\u6210\u56fe\u7247\u7684\u6570\u91cf\u548c\u5c3a\u5bf8\u3002</p> <p>\u8be6\u7ec6\u793a\u4f8b\u8bf7\u53c2\u8003\uff1ahttps://docs.aws.amazon.com/nova/latest/userguide/image-gen-access.html</p>"},{"location":"zh/providers/nova-canvas/#_3","title":"\u5176\u4ed6\u8bf4\u660e","text":"<p>API \u8bf7\u6c42\u7684\u65f6\u5019\uff0c\u5982\u679c stream \u662f false \u7684\u8bdd\uff0c\u4f1a\u8f93\u51fa\u5982\u4e0b\u7684\u683c\u5f0f\uff1a</p> <pre><code>{\n  \"model\": \"some-model\",\n  \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"content\": \"I'll help you generate an image of a cat in the style of Qi Baishi, the renowned Chinese painter known for his watercolor works with bold, expressive brushstrokes and a distinctive traditional Chinese artistic style.\\n\\nLet me use the txt2img function to create this image. I'll craft a prompt that captures both the cat and Qi Baishi's artistic style.\",\n        \"role\": \"assistant\"\n      }\n    },\n    {\n      \"message\": {\n        \"tool_calls\": [\n          {\n            \"type\": \"function\",\n            \"function\": {\n              \"name\": \"txt2img\",\n              \"arguments\": {\n                \"prompt\": \"A lovely cat painted in Qi Baishi style, traditional Chinese ink and wash painting, expressive brushstrokes, minimalist composition, elegant and graceful, watercolor technique\",\n                \"width\": 512,\n                \"height\": 512,\n                \"negative_prompt\": \"nsfw, photorealistic, western art style, digital art\"\n              }\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"usage\": {\n    \"completion_tokens\": 235,\n    \"prompt_tokens\": 2529,\n    \"total_tokens\": 2764\n  },\n  \"images\": [\n    \"https://a-s3-signed-url\"\n  ]\n}\n</code></pre>"},{"location":"zh/providers/ollama/","title":"ollama","text":"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528 Ollama \u90e8\u7f72\u539f\u751f\u6a21\u578b\u3002\u8be5 Provider \u53ef\u4ee5\u9002\u914d Ollama \u7684 API\u3002</p> <p>\u66f4\u591a\u4fe1\u606f,\u8bf7\u8bbf\u95ee https://github.com/ollama/ollama/\u3002</p>"},{"location":"zh/providers/ollama/#_1","title":"\u914d\u7f6e","text":"<pre><code>{\n  \"host\": \"http://localhost:11434\",\n  \"model\": \"phi3\"\n}\n</code></pre> Key Type Required Default value Description host string Y ollama \u90e8\u7f72\u5730\u5740 model string Y Model id. \u67e5\u770b Ollama \u6587\u6863"},{"location":"zh/providers/openai-compatible/","title":"openai-compatible","text":"<p>\u9002\u7528\u4e8e Docker \u955c\u50cf\u7248\u672c 0.0.21 \u53ca\u4ee5\u4e0a</p> <p>\u6b64 Provider \u53ef\u4ee5\u5c06\u90a3\u4e9b\u5df2\u7ecf\u9002\u914d\u8fc7 OpenAI API \u7684\u7b2c\u4e09\u65b9\u6a21\u578b\u91cd\u65b0\u914d\u7f6e\u5230 BRConnector \u4e2d\u3002</p>"},{"location":"zh/providers/openai-compatible/#_1","title":"\u914d\u7f6e","text":"<pre><code>{\n  \"model\": \"qwen-plus\",\n  \"apiKey\": \"sk-...\",\n  \"baseURL\": \"https://some-url/v1\"\n}\n</code></pre> \u952e\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u9ed8\u8ba4\u503c \u63cf\u8ff0 baseURL string \u662f \u57fa\u7840 url apiKey string \u662f api key model string \u662f \u7b2c\u4e09\u65b9\u7684\u6a21\u578b\u540d\u79f0"},{"location":"zh/providers/painter/","title":"painter","text":"<p>Since Docker image version 0.0.9 Updated in Docker image version 0.0.12 Updated in Docker image version 0.0.13 Updated in Docker image version 0.0.19</p> <p>\u4f7f\u7528 Bedrock \u753b\u56fe\u6a21\u578b</p>"},{"location":"zh/providers/painter/#_1","title":"\u914d\u7f6e","text":"<pre><code>{\n  \"regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ],\n  \"s3Bucket\": \"&lt;your-bucket&gt;\",\n  \"s3Prefix\": \"&lt;your-prefix&gt;\",\n  \"s3Region\": \"us-east-1\",\n  \"paintModelId\": \"amazon.titan-image-generator-v2:0\",\n  \"localLlmModel\": \"claude35\"\n}\n</code></pre> Key Type Required Default value Description localLlmModel string Y You should choose a native model for function calling paintModelId string Y \u201cstability.stable-diffusion-xl-v1\u201d Bedrock image gen model id. s3Bucket string Y S3 is for storing the generated images, please set the IAM permissions to meet access requirements. s3Prefix string N The S3 prefix combined with the date will ultimately form the S3 key. s3Region string Y S3 bucket region regions string N [\u201cus-east-1\u201d] If you have applied and specified multiple regions, then a region will be randomly selected for the call. This feature can effectively alleviate performance bottlenecks. <p>paintModelId \u53ef\u4ee5\u662f\u5982\u4e0b\u7684\u53c2\u6570:</p> <ul> <li>amazon.nova-canvas-v1:0</li> <li>stability.stable-image-core-v1:0</li> <li>stability.sd3-large-v1:0</li> <li>stability.stable-image-ultra-v1:0</li> <li>stability.stable-diffusion-xl-v1</li> <li>amazon.titan-image-generator-v1</li> <li>amazon.titan-image-generator-v2:0</li> </ul> <p>\u7136\u540e\u5c06\u6b64\u6a21\u578b\u6388\u4e88\u7ec4\u6216 api key\u3002</p>"},{"location":"zh/providers/painter/#brclient","title":"BRClient \u4e2d\u7684\u529f\u80fd\u548c\u622a\u56fe","text":"<p>\u60a8\u53ef\u4ee5\u5728\u5bf9\u8bdd\u4e2d\u5305\u542b\u5982\u4e0b\u4fe1\u606f\uff1a</p> <ul> <li>\u652f\u6301\u81ea\u7136\u8bed\u8a00\u5bf9\u8bdd</li> <li>\u652f\u6301\u591a\u8f6e\u5bf9\u8bdd\u4ee5\u7ec6\u5316\u63d0\u793a</li> <li>\u652f\u6301\u591a\u79cd\u8bed\u8a00</li> <li>\u652f\u6301\u56fe\u50cf\u5927\u5c0f\u548c\u5bbd\u9ad8\u6bd4</li> </ul> <p>BRClient \u4e2d\u7684\u622a\u56fe\uff1a</p> <p></p> <p></p> <p></p>"},{"location":"zh/providers/sagemaker-deepseek/","title":"sagemaker-deepseek","text":"<p>Since Docker image version 0.0.27</p> <p>\u8fd9\u4e2a\u63d0\u4f9b\u5668\u662f\u4e3a\u4e86\u9002\u914d\u90e8\u7f72\u5728 SageMaker \u4e2d\u7684 DeepSeek R1 \u7c7b\u7684\u6a21\u578b\u3002</p>"},{"location":"zh/providers/sagemaker-deepseek/#_1","title":"\u90e8\u7f72\u60c5\u5f62","text":"<p>\u5206\u522b\u6d4b\u8bd5\u4e86\u4e0b\u9762\u51e0\u79cd\u65b9\u6cd5\u5728 SageMaker \u4e2d\u90e8\u7f72 DeepSeek-R1 \u6a21\u578b\uff1a</p> <p>1. \u4f7f\u7528 lmi \u5f15\u64ce\u90e8\u7f72</p> <p>\u4f1a\u76f4\u63a5\u8f93\u51fa content\uff0c\u5e76\u4e14\u5728\u5927\u591a\u6570\u60c5\u5f62\u4e0b\u4f1a\u5305\u542b\u4e00\u4e2a <code>&lt;/think&gt;</code> \u7684\u6807\u7b7e\u3002</p> <p>\u8bf7\u53c2\u8003\u90e8\u7f72\u811a\u672c\uff1a</p> <p>https://github.com/aws-samples/sample-connector-for-bedrock/tree/main/notebook/SageMaker</p> <p>2. \u4f7f\u7528 JumpStart \u76f4\u63a5\u90e8\u7f72</p> <p>\u4f7f\u7528 JumpStart \u4f1a\u76f4\u63a5\u8f93\u51fa\u6807\u51c6\u7684 DeepSeek \u683c\u5f0f\uff0c\u5373\u5305\u542b\u4e86 <code>reasoning_content</code> \u5c5e\u6027\u7684\u5185\u5bb9\uff0c\u8bf7\u628a  platform \u8bbe\u7f6e\u4e3a <code>deepseek</code>\u3002</p> <p>3. \u4f7f\u7528 Bedrock \u90e8\u7f72</p> <p>\u4f1a\u76f4\u63a5\u8f93\u51fa content\uff0c\u5e76\u4e14\u5728\u5927\u591a\u6570\u60c5\u5f62\u4e0b\u4f1a\u5305\u542b\u4e00\u4e2a <code>&lt;/think&gt;</code> \u7684\u6807\u7b7e\u3002</p> <p>\u8fd8\u6709\u522b\u7684\u533a\u522b\u662f\uff1a\u4ed6\u4f1a\u8f93\u51fa <code>data:</code> \u7b49\u4fe1\u606f\u3002\u672c\u63d0\u4f9b\u5668\u5df2\u7ecf\u5904\u7406\u4e86\u8fd9\u90e8\u5206\u5dee\u5f02\u3002</p>"},{"location":"zh/providers/sagemaker-deepseek/#_2","title":"\u914d\u7f6e","text":"<pre><code>{\n  \"regions\": [\n    \"us-east-1\"\n  ],\n  \"endpointName\": \"&lt;your-sagemaker-endpoint-name&gt;\",\n  \"thinking\": true,\n  \"platform\": \"deepseek\"\n}\n</code></pre> Key Type Required Default value Description endpointName string Y SageMaker endpoint \u540d\u79f0 regions string[] or string N [\u201cus-east-1\u201d] \u60a8\u53ef\u4ee5\u628a\u6a21\u578b\u90e8\u7f72\u5728\u591a\u53ef\u7528\u533a\uff0c\u53ef\u589e\u52a0\u6a21\u578b\u7684\u53ef\u7528\u6027\u3002 platform string N \u5982\u679c\u662f JumpStart\uff0c\u8bf7\u586b\u5199 <code>deepseek</code>\uff0c\u5176\u4ed6\u60c5\u51b5\u4e0d\u5fc5\u586b\u5199\u3002 thinking boolean N false \u5728 lmi \u6a21\u5f0f\u4e0b\uff0c\u542f\u7528 thinking \u4f1a\u5f3a\u5236\u5728prompt \u540e\u9762\u52a0\u4e00\u4e2a <code>&lt;think&gt;</code> \u6807\u7b7e"},{"location":"zh/providers/sagemaker-lmi/","title":"sagemaker-lmi","text":"<p>Since Docker image version 0.0.8</p> <p>\u4f7f\u7528 Sagemaker \u90e8\u7f72\u81ea\u5b9a\u4e49\u6a21\u578b\u3002</p>"},{"location":"zh/providers/sagemaker-lmi/#_1","title":"\u914d\u7f6e","text":"<pre><code>{\n  \"regions\": [\n    \"us-east-1\"\n  ],\n  \"endpointName\": \"&lt;your-sagemaker-endpoint&gt;\"\n}\n</code></pre> Key Type Required Default value Description endpointName string Y Sagemaker endpoint \u540d\u79f0 regions string[] or string N [\u201cus-east-1\u201d] \u60a8\u53ef\u4ee5\u628a\u6a21\u578b\u90e8\u7f72\u5728\u591a\u53ef\u7528\u533a\uff0c\u53ef\u589e\u52a0\u6a21\u578b\u7684\u53ef\u7528\u6027\u3002 <p>\u7136\u540e\u5c06\u6b64\u6a21\u578b\u6388\u4e88\u7ec4\u6216 API key\u3002</p>"},{"location":"zh/providers/sagemaker-lmi/#_2","title":"\u90e8\u7f72\u6a21\u578b","text":"<p>Sagemaker LMI \u5df2\u7ecf\u652f\u6301\u4e86\u90e8\u5206\u6d41\u884c\u7684\u5f00\u6e90 LLM \u6a21\u578b\u7684\u76f4\u63a5\u90e8\u7f72\uff0c\u65e0\u9700\u7f16\u5199\u81ea\u5b9a\u4e49\u7684\u63a8\u7406\u7a0b\u5e8f\u5373\u53ef\u652f\u6301 message API \u98ce\u683c\u7684\u8c03\u7528\u3002</p> <p>\u8bf7\u53c2\u8003\u8fd9\u4e2a\u94fe\u63a5\u67e5\u770b\u6a21\u578b\u90e8\u7f72\uff1a</p> <p>https://github.com/aws-samples/sample-connector-for-bedrock/tree/main/notebook/sagemaker</p>"},{"location":"zh/providers/smart-router/","title":"smart-router","text":"<p>\u9002\u7528\u4e8e Docker \u955c\u50cf\u7248\u672c 0.0.21 \u53ca\u4ee5\u4e0a</p> <p>\u6b64 Provider \u53ef\u4ee5\u81ea\u52a8\u5bf9\u6a21\u578b\u8fdb\u884c\u8def\u7531\u3002</p> <p>\u4f60\u9700\u8981\u5728\u540e\u53f0\u914d\u7f6e\u8def\u7531\u89c4\u5219\uff0c\u5e76\u4e14\u8fd9\u4e9b\u89c4\u5219\u4e5f\u662f\u57fa\u4e8e\u81ea\u7136\u8bed\u8a00/\u63d0\u793a\u8bcd\u7684\u3002</p>"},{"location":"zh/providers/smart-router/#_1","title":"\u914d\u7f6e","text":"<pre><code>{\n  \"rules\": [\n    {\n      \"name\": \"my-painter\",\n      \"description\": \"draw a picture\"\n    },\n    {\n      \"name\": \"amazon-nova-pro\",\n      \"description\": \"When user talk about aws or amazon\"\n    },\n    {\n      \"name\": \"claude-3-sonnet\",\n      \"description\": \"uncertain\"\n    }\n  ],\n  \"localLlmModel\": \"amazon-nova-lite\"\n}\n</code></pre> <ul> <li>name\uff1a\u6a21\u578b\u7684\u540d\u5b57\uff0c\u6307\u7684\u662f BRConnector \u4e2d\u914d\u7f6e\u8fc7\u7684\u6a21\u578b\u540d\u5b57, \u8fd9\u4e2a key \u8bf7\u52a1\u5fc5\u4fdd\u7559\u3002</li> <li>description\uff1a\u5bf9\u4e8e\u6b64\u6a21\u578b\u7684\u63cf\u8ff0\u3002</li> </ul> <p>Tip</p> <p>\u4e0a\u8ff0\u914d\u7f6e\u4f1a\u5b8c\u6574\u7684\u8f93\u5165\u5230\u7cfb\u7edf\u63d0\u793a\u8bcd\u4e2d\uff0c\u6240\u4ee5\uff0c\u4e3a\u4e86\u63d0\u9ad8\u610f\u56fe\u8bc6\u522b\u7684\u51c6\u786e\u6027\uff0c\u4f60\u53ef\u4ee5\u589e\u52a0\u4efb\u610f\u5176\u4ed6\u7684 key\uff0c \u5982 \u201cwhen\u201d\uff0c \u201cexcept\u201d \u7b49</p> \u952e\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u586b \u9ed8\u8ba4\u503c \u63cf\u8ff0 localLlmModel string \u662f \u9009\u62e9\u652f\u6301\u51fd\u6570\u8c03\u7528\u7684\u672c\u5730\u6a21\u578b rules json \u662f \u8bf7\u53c2\u8003\u4e0a\u9762\u7684\u914d\u7f6e\u793a\u4f8b <p>Tip</p> <p>\u5982\u679c\u8def\u7531\u5668\u6ca1\u6709\u9009\u62e9\u5230\u4efb\u4f55\u6a21\u578b\uff0c\u4ed6\u4f1a\u628a\u6a21\u578b\u7684\u540d\u5b57\u964d\u7ea7\u4e3a \u201cdefault\u201d\uff0c\u6240\u4ee5\u4f60\u7684\u6a21\u578b\u4e2d\u6700\u597d\u6709\u4e00\u4e2a\u540d\u5b57\u4e3a \u201cdefault\u201d \u7684\u6a21\u578b\u3002</p>"},{"location":"zh/providers/titan_embedings/","title":"titan_embedings","text":"<p>Since Docker image version 0.0.18</p> <p>\u4f7f\u7528\u8fd9\u4e2a Provider\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 Titan text embeddings \u6a21\u578b\u8f93\u51fa\u6587\u672c\u7684 embeddings\uff08float \u6570\u7ec4\uff09\u3002\u6a21\u578b\u7684\u914d\u7f6e\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7\u6587\u6863\uff1aAmazon Titan Embeddings Text</p>"},{"location":"zh/providers/titan_embedings/#_1","title":"\u53c2\u6570\u914d\u7f6e","text":"Key Type Required Default value Description modelId string Y Model id,  <code>amazon.titan-embed-text-v2:0</code>  \u6216\u8005 <code>amazon.titan-embed-text-v1</code> regions string[] or string N \u4e0e\u73af\u5883\u53d8\u91cfAWS_DEFAULT_REGION\u4e00\u81f4 \u5982\u679c\u60a8\u5df2\u7ecf\u7533\u8bf7\u5e76\u6307\u5b9a\u4e86\u591a\u4e2a\u5730\u533a\uff0c\u90a3\u4e48\u5c06\u4f1a\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u5730\u533a\u8fdb\u884c\u8c03\u7528\u3002\u8fd9\u4e2a\u529f\u80fd\u53ef\u4ee5\u6709\u6548\u7f13\u89e3\u6027\u80fd\u74f6\u9888\u3002 dimensions number N 1024 \u8f93\u51fa\u7684\u7ef4\u5ea6\uff0c\u4ec5\u9002\u7528\u4e8e <code>amazon.titan-embed-text-v2:0</code> \u6a21\u578b\u3002 normalize boolean N true Flag indicating whether or not to normalize the output embeddings\uff0c\u4ec5\u9002\u7528\u4e8e <code>amazon.titan-embed-text-v2:0</code> \u6a21\u578b <p>titan_embedings \u7684\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>{\n  \"modelId\": \"amazon.titan-embed-text-v2:0\",\n  \"regions\": [\n    \"us-east-1\",\n    \"us-west-2\"\n  ]\n}\n</code></pre>"},{"location":"zh/providers/titan_embedings/#api","title":"API \u4f7f\u7528\u65b9\u6cd5","text":"<p>embeddings API \u9075\u5faa OpenAI \u517c\u5bb9\u683c\u5f0f\uff1a</p> <pre><code>POST /v1/embeddings\nAuthorization: Bearer {{key}}\nContent-Type: application/json\n\n{\n  \"model\": \"{{model}}\", \n  \"input\": \"\u6211\u662f\u8c01\"\n}\n</code></pre> <p>\u5bf9\u4e8e\u6279\u91cf\u5904\u7406\uff0c\u60a8\u53ef\u4ee5\u4f20\u5165\u5b57\u7b26\u4e32\u6570\u7ec4\uff1a</p> <pre><code>POST /v1/embeddings\nAuthorization: Bearer {{key}}\nContent-Type: application/json\n\n{\n  \"model\": \"{{model}}\", \n  \"input\": [\"\u4f60\u597d\", \"hero\"]\n}\n</code></pre> <p>API \u5c06\u8fd4\u56de\u5982\u4e0b\u683c\u5f0f\u7684\u54cd\u5e94\uff1a</p> <pre><code>{\n  \"object\": \"list\",\n  \"model\": \"amazon.titan-embed-text-v2:0\",\n  \"data\": [\n    {\n      \"object\": \"embedding\",\n      \"index\": 0,\n      \"embedding\": [\n        -0.03824065253138542,\n        0.0244449749588,\n        // ... (\u5269\u4f59\u7684 embedding \u503c)\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"zh/providers/urls-reader/","title":"urls-reader","text":"<p>Since Docker image version 0.0.12</p> <p>\u53ef\u4ee5\u4f7f\u7528\u672c\u63d0\u4f9b\u5668\u8bfb\u53d6\u5bf9\u8bdd\u4e2d\u7684 url \u7684\u6587\u5b57\u5185\u5bb9\uff0c\u53ef\u4ee5\u652f\u6301\u591a\u4e2a url \u7684\u8bfb\u53d6\u3002</p>"},{"location":"zh/providers/urls-reader/#_1","title":"\u6a21\u578b\u914d\u7f6e","text":"<p>\u53c2\u6570\u914d\u7f6e\u5982\u4e0b:</p> <p>Name: some-model</p> <p>Provider: urls-reader</p> <p>Configuration:</p> <pre><code>{\n  \"localLlmModel\": \"sonnet3.5\"\n}\n</code></pre> <ul> <li>localLlmModel: \u5fc5\u987b\u914d\u7f6e\u4e3a\u652f\u6301\u51fd\u6570\u8c03\u7528\u7684\u6a21\u578b\uff0c\u5e76\u4e14\u5df2\u5b58\u5728\u4e8e BRConnector \u4e2d\u3002</li> </ul>"},{"location":"zh/providers/urls-reader/#brclient","title":"\u5728 BRClient \u4e2d\u7684\u622a\u56fe","text":""},{"location":"zh/providers/web-miner/","title":"web-miner","text":"<p>Since Docker image version 0.0.10</p> <p>\u641c\u7d22\u4e92\u8054\u7f51\u3002</p> <p>\u672c Provider \u53ef\u4ee5\u5c06\u60a8\u7684\u95ee\u9898\u8f6c\u5316\u4e3a\u641c\u7d22\u5173\u952e\u8bcd\uff0c\u901a\u8fc7\u641c\u7d22\u5f15\u64ce\u83b7\u53d6\u7ed3\u679c\uff0c\u7136\u540e\u5c06\u5176\u603b\u7ed3\u6210\u76f8\u5e94\u7684\u7b54\u6848\u3002\u652f\u6301\u591a\u8f6e\u5bf9\u8bdd\u3002</p> <p>Tip</p> <p>\u4e0d\u8981\u95ee\u592a\u591a\u8f6e\u6b21\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u8fd9\u4e2a Provider \u4f1a\u628a\u4f60\u4e4b\u524d\u7684\u63d0\u793a\u603b\u7ed3\u6210\u4e3a\u5173\u952e\u8bcd\u5e76\u8fdb\u884c\u641c\u7d22\u3002</p> <p>\u5728 BRClient \u4e2d\uff0c\u592a\u957f\u4fe1\u606f\u4f1a\u88ab\u603b\u7ed3\u6210\u5355\u4e00\u5386\u53f2\u8bb0\u5f55\uff0c\u4ece\u800c\u4e22\u5931\u6700\u65e9\u7684\u7528\u6237\u8f93\u5165\uff0c\u8fd9\u4f1a\u5bfc\u81f4 AI \u56de\u7b54\u7684\u7ed3\u679c\u548c\u60a8\u60f3\u8981\u7684\u76f8\u53bb\u751a\u8fdc\u3002</p>"},{"location":"zh/providers/web-miner/#_1","title":"\u6a21\u578b\u914d\u7f6e","text":"<p>\u53c2\u6570\u914d\u7f6e\u5982\u4e0b:</p> <p>Name: some-model</p> <p>Provider: web-miner</p> <p>Configuration:</p> <pre><code>{\n  \"sites\": [\n    \"aws.amazon.com\",\n    \"www.amazonaws.cn\",\n    \"repost.aws\",\n    \"stackoverflow.com\"\n  ],\n  \"localLlmModel\": \"claude-3-sonnet\",\n  \"searxng\": {\n    \"host\": \"http://127.0.0.1:8081/\"\n  },\n  \"serpapi\": {\n    \"apiKey\": \"xxx......\",\n    \"engine\": \"google\"\n  },\n  \"google\": {\n    \"googleAPIKey\": \"AIxxxxxx_xxxxxxxx\",\n    \"googleCSECX\": \"00xxxc000a2xxxxx\"\n  }\n}\n</code></pre> <ul> <li>sites: \u53ea\u4ece\u8fd9\u4e9b\u7f51\u7ad9\u91cc\u8fdb\u884c\u641c\u7d22\uff0c\u53ef\u4ee5\u4e0d\u6307\u5b9a\u6b64\u53c2\u6570\u3002</li> <li>localLlmModel: \u5fc5\u987b\u914d\u7f6e\u4e3a\u652f\u6301\u51fd\u6570\u8c03\u7528\u7684\u6a21\u578b\uff0c\u5e76\u4e14\u5df2\u5b58\u5728\u4e8e BRConnector \u4e2d\u3002</li> <li>\u652f\u6301\u4e0b\u9762\u7684\u8fd9\u4e9b\u641c\u7d22\u5f15\u64ce\u6216\u96c6\u5408\u5de5\u5177\u4e2d\u7684\u4e00\u4e2a\uff0c\u4f18\u5148\u7ea7\u5982\u4e0b:   1. searxng   2. SerpAPI   3. google</li> </ul> <p>Note</p> <p>\u60a8\u9700\u8981\u5c06 localLlmModel \u7684\u6a21\u578b\u914d\u7f6e\u6210 bedrock-converse \u63d0\u4f9b\u7a0b\u5e8f\u63d0\u4f9b\u7684 claude3+ \u6a21\u578b\uff0c\u5176\u4ed6\u6a21\u578b\u5c1a\u4e0d\u5177\u5907\u51fd\u6570\u8c03\u7528\u529f\u80fd\u3002\u65e9\u671f\u7cfb\u7edf\u4e2d\u9ed8\u8ba4\u7684 claude3 \u6a21\u578b\u4e0d\u662f\u7531 converse \u9a71\u52a8\u7684\u3002\u5982\u679c\u60a8\u4f7f\u7528\u8fd9\u4e9b\u6a21\u578b\uff0c\u5219\u9700\u8981\u5c06\u539f\u59cb\u914d\u7f6e\u7684 Provider \u66f4\u65b0\u4e3a bedrock-converse\u3002\u8bf7\u6ce8\u610f\u5c06\u952e \u2018model_id\u2019 \u4fee\u6539\u4e3a \u2018modelId\u2019\u3002</p>"},{"location":"zh/providers/web-miner/#_2","title":"\u641c\u7d22\u914d\u7f6e","text":""},{"location":"zh/providers/web-miner/#searxng","title":"searxng","text":"<p>Since Docker image version 0.0.11</p> <p>\u8be6\u60c5\u8bf7\u8bbf\u95ee https://docs.searxng.org/\u3002</p> <p>\u521b\u5efa\u4e00\u4e2a settings.yml \u6587\u4ef6\uff0c\u589e\u52a0 json \u8f93\u51fa\u683c\u5f0f\u3002</p> <pre><code>use_default_settings: true\nserver:\n    secret_key: \"some-Other-PWD\"   # change this!\n    bind_address: \"0.0.0.0\"\nsearch:\n  formats:\n\n    - html\n    - json\n</code></pre> <p>\u542f\u52a8 searxng:</p> <pre><code> docker run --name searxng -d -p 8081:8080 \\\n  -v ./settings.yml:/etc/searxng/settings.yml \\\n  -e \"INSTANCE_NAME=searxng\" searxng/searxng\n</code></pre> <p>\u8fd9\u6837\u90e8\u7f72\u51fa\u6765\u7684 searxng \u4e3b\u673a\u5730\u5740\u662f: http://127.0.0.1:8081/\uff0c\u8bf7\u5c06\u5176\u914d\u7f6e\u5230 searxng \u7684 host \u8282\u70b9\u4e2d\u3002</p>"},{"location":"zh/providers/web-miner/#serpapi","title":"SerpAPI","text":"<p>Since Docker image version 0.0.11</p> <p>\u8be6\u60c5\u8bf7\u8bbf\u95ee https://serpapi.com/\u3002</p> <p>\u767b\u5f55\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u5176\u663e\u773c\u4f4d\u7f6e\u770b\u5230 API Key\u3002</p> <p>engine \u53c2\u6570\u652f\u6301\u5982\u4e0b\u8fd9\u4e9b\uff0c\u9ed8\u8ba4\u662f google\uff1a</p> <ul> <li>google</li> <li>bing</li> <li>baidu</li> <li>duckduckgo</li> <li>yahoo</li> <li>yandex</li> <li>yelp</li> <li>naver</li> </ul> <p>SerpAPI \u4e0d\u514d\u8d39</p> <p>\u8bf7\u6ce8\u610f\uff1a\u8d85\u8fc7\u6bcf\u6708\u7684\u9650\u989d\u4f1a\u88ab\u6536\u8d39\u3002</p>"},{"location":"zh/providers/web-miner/#google","title":"Google","text":"<p>\u4f7f\u7528 Google \u81ea\u5b9a\u4e49\u641c\u7d22\u5f15\u64ce\uff0c\u9700\u8981\u5982\u4e0b 2 \u4e2a Key\uff0c\u8bf7\u70b9\u51fb\u76f8\u5e94\u94fe\u63a5\u521b\u5efa\uff1a</p> <ul> <li> <p>\u7533\u8bf7 googleAPIKey</p> </li> <li> <p>\u7533\u8bf7 googleCSECX</p> </li> </ul> <p>Google CSE \u4e0d\u514d\u8d39</p> <p>\u8bf7\u6ce8\u610f\uff1a\u8d85\u8fc7\u6bcf\u65e5\u7684\u9650\u989d\u4f1a\u88ab\u6536\u8d39\u3002</p>"},{"location":"zh/providers/web-miner/#brclient","title":"\u5728 BRClient \u4e2d\u7684\u622a\u56fe","text":""},{"location":"zh/user-manual/development/","title":"\u5f00\u53d1\u6307\u5357","text":"<p>\u672c\u9879\u76ee\u662f\u793a\u4f8b\u4ee3\u7801\uff0c\u5f3a\u70c8\u5efa\u8bae\u60a8\u53c2\u8003\u672c\u9879\u76ee\u81ea\u884c\u5f00\u53d1\u3002</p>"},{"location":"zh/user-manual/development/#_2","title":"\u672c\u5730\u5f00\u53d1\u6a21\u5f0f","text":"<p>Clone \u672c\u9879\u76ee\u3002</p> <p>\u5b89\u88c5\u4f9d\u8d56\uff1a</p> <pre><code>npm install\n# or\nyarn\n</code></pre>"},{"location":"zh/user-manual/development/#_3","title":"\u73af\u5883\u53d8\u91cf\u914d\u7f6e","text":"<p>.env \u6587\u4ef6</p> <p>\u8fd9\u4e2a\u6587\u4ef6\u653e\u5728\u9879\u76ee\u6839\u76ee\u5f55.</p> <pre><code>PGSQL_HOST=127.0.0.1\nPGSQL_DATABASE=brconnector_db\nPGSQL_USER=postgres\nPGSQL_PASSWORD=mysecretpassword\nPGSQL_DEBUG_MODE=ok\nADMIN_API_KEY=br_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nDEBUG_MODE=true\n</code></pre> <p>\u652f\u6301\u5982\u4e0b\u73af\u5883\u53d8\u91cf\uff1a</p> Key Required Default value Description ADMIN_API_KEY yes You need to set this value to generate the first API key. PGSQL_HOST no The address of the PostgreSQL. If the database is not configured, then the connector is just a pure proxy. PGSQL_PORT no 5432 The port of the PostgreSQL. PGSQL_DATABASE no The name of the PostgreSQL database. PGSQL_USER no The login user for the PostgreSQL. PGSQL_PASSWORD no The password user for the PostgreSQL. PGSQL_MAX no 80 The maximum connection pool size for PostgreSQL. PGSQL_DEBUG_MODE no false If you set this parameter, it will print out the SQL statements and parameters in the console. AWS_ACCESS_KEY_ID no If your application has been authorized through an IAM policy, you don\u2019t need to set this variable. AWS_SECRET_ACCESS_KEY no If your application has been authorized through an IAM policy, you don\u2019t need to set this variable. AWS_DEFAULT_REGION no \u2018us-east-1\u2019 DEBUG_MODE no false If you set this parameter, it will print out a lot of debugging information in the console. DISABLE_UI no false Setting this value will not publish the front-end UI. SMTP_HOST no SMTP server host address. Setting up an SMTP Server allows you to send your API key directly to the user\u2019s email inbox. SMTP_PORT no 465 SMTP server port number SMTP_USER no SMTP server username SMTP_PASS no SMTP server password SMPT_FROM no SMTP sender email address, your SMTP server maybe verify this PERFORMANCE_MODE no \u5982\u679c\u60a8\u8bbe\u7f6e\u4e86\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\uff0c\u90a3\u4e48\u5c06\u4e0d\u518d\u4fdd\u5b58\u804a\u5929\u8bb0\u5f55\u548c\u66f4\u65b0\u6d88\u8d39\u4e86\u3002\u610f\u5473\u7740\u63a7\u8d39\u529f\u80fd\u5c06\u5931\u6548\u3002"},{"location":"zh/user-manual/development/#_4","title":"\u542f\u52a8\u540e\u53f0","text":"<pre><code>npm run dev\n# or\nyarn dev\n</code></pre> <p>If you have configured postgres, the tables will be created automatically.</p>"},{"location":"zh/user-manual/development/#_5","title":"\u542f\u52a8\u7ba1\u7406\u754c\u9762","text":"<pre><code>npm run dev-ui\n# or\nyarn dev-ui\n</code></pre>"},{"location":"zh/user-manual/development/#_6","title":"\u6784\u5efa","text":""},{"location":"zh/user-manual/development/#_7","title":"\u4e00\u8d77\u6784\u5efa","text":"<pre><code>npm run build\n# or\nyarn build\n</code></pre> <p>The above command will compile the frontend and backend applications into the dist/public and dist/server directories, respectively.</p> <p>After a successful compilation, navigate to the dist directory and execute <code>node server/index.js</code>.</p> <p>If you have not disabled the WebUI, http://localhost:8866/manager will be bound to the WebUI.</p>"},{"location":"zh/user-manual/development/#_8","title":"\u6784\u5efa\u540e\u7aef (\u53ef\u9009)","text":"<pre><code>npm run build-server\n# or\nyarn build-server\n</code></pre>"},{"location":"zh/user-manual/development/#_9","title":"\u6784\u5efa\u524d\u7aef (\u53ef\u9009)","text":"<pre><code>npm run build-ui\n# or\nyarn build-ui\n</code></pre>"},{"location":"zh/user-manual/development/#docker","title":"Docker \u955c\u50cf","text":"<p>\u7f16\u8bd1\u5b8c\u6210\u4e4b\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528  Dockerfile \u6765\u6784\u5efa\u4f60\u7684\u955c\u50cf\u3002</p> <p>The content of the Dockerfile:</p> <pre><code>FROM node:20\n\nRUN apt update &amp;&amp; apt install -y awscli\n\nCOPY ./dist /app\nWORKDIR /app\nCOPY ./src/scripts/* ./src/scripts/\nCOPY ./package.json .\n\nRUN npm install --omit=dev\n\nHEALTHCHECK --interval=5s --timeout=3s \\\n  CMD curl -fs http://localhost:8866/ || exit 1\n\nEXPOSE 8866\n\nCMD [\"node\", \"server/index.js\"]\n</code></pre> <p>Note</p> <p>\u4e0a\u9762\u7684 Dockefile \u6ca1\u6709\u5305\u542b\u5728\u9879\u76ee\u4e2d\u3002</p> <p>\u7136\u540e\u6267\u884c\u6253\u5305\u547d\u4ee4\uff1a</p> <pre><code>docker build -t &lt;registry-repo-tag&gt; .\n</code></pre>"},{"location":"zh/user-manual/introduction/","title":"\u5982\u4f55\u4f7f\u7528","text":"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7684\u65b9\u6cd5\u6765\u8bbf\u95ee BRConnector\u3002</p> <ul> <li>\u76f4\u63a5\u8bbf\u95ee API</li> <li>\u4f7f\u7528 Sample Client for Bedrock(BRClient)</li> <li>\u4f7f\u7528\u5176\u4ed6\u4e0e OpenAI \u517c\u5bb9\u7684\u5ba2\u6237\u7aef</li> </ul> <p>\u73b0\u5728\u5e02\u9762\u4e0a\u5df2\u7ecf\u6709\u5f88\u591a OpenAI \u7684\u5ba2\u6237\u7aef\uff0c\u6709\u4e9b\u5ba2\u6237\u7aef\u53ef\u4ee5\u8bbe\u7f6e Host \u548c API key\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u590d\u7528\u8fd9\u4e9b\u5ba2\u6237\u7aef\u3002</p> <p>\u6709\u90e8\u5206\u5ba2\u6237\u7aef\u7aef\u65e0\u6cd5\u8bbe\u7f6e\u6a21\u578b\u7684\u540d\u79f0\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u65b9\u5f0f\u7ed5\u5f00\uff1a</p> <p>\u5047\u8bbe\u67d0\u4e2a\u5ba2\u6237\u7aef\u5c06\u6a21\u578b\u540d\u5b57\u56fa\u5b9a\u4e3a <code>xyzllama3</code>\u3002</p> <p>\u5728 BRConnector \u7684\u540e\u7aef\uff0c\u60a8\u53ea\u9700\u8981\u5c06\u6a21\u578b\u540d\u79f0\u8bbe\u7f6e\u4e3a xyzllama3\uff0c\u628a Provider \u8bbe\u7f6e\u4e3a bedrock-converse\uff0c\u5728\u6a21\u578b\u914d\u7f6e\u91cc\uff0c\u5c06 modelId \u8bbe\u7f6e\u4e3a\u4efb\u610f\u652f\u6301\u7684\u6a21\u578b ID \u5373\u53ef\u3002</p>"},{"location":"zh/user-manual/management/","title":"\u540e\u53f0\u7ba1\u7406","text":""},{"location":"zh/user-manual/management/#_2","title":"\u767b\u5f55","text":"<p>BRConnector \u7684\u7ba1\u7406\u540e\u53f0\u8def\u5f84\u4e3a\uff1ahttp(s)://your-endpoint/manager/</p> <p>\u4e00\u65e6\u60a8\u6709\u4e86 BRConnector \u7684 API Key\uff0c\u5c31\u53ef\u4ee5\u767b\u5f55 manager \u7ba1\u7406\u540e\u53f0\u4e86\u3002</p> <p>API key \u5206\u7ba1\u7406\u5458\u6743\u9650\u548c\u666e\u901a\u7528\u6237\u6743\u9650\u3002\u666e\u901a\u7528\u6237\u53ef\u4ee5\u770b\u5230\u81ea\u5df1\u7684\u6d88\u8d39\u548c\u804a\u5929\u8bb0\u5f55\u3002</p> <p>\u7ba1\u7406\u5458\u89d2\u8272\u9664\u4e86\u62e5\u6709\u666e\u901a\u7528\u6237\u7684\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u7ba1\u7406 API key\uff0c\u6a21\u578b \u548c \u7ec4\u3002</p>"},{"location":"zh/user-manual/management/#api-keys","title":"API Keys \u7ba1\u7406","text":""},{"location":"zh/user-manual/management/#_3","title":"\u4e3b\u8981\u529f\u80fd","text":"<ul> <li>\u521b\u5efa\u4e00\u4e2a\u7528\u6237\uff08\u9881\u53d1\u4e00\u4e2a Key\uff09\u3002</li> <li>\u6279\u91cf\u5bfc\u5165\u7528\u6237\u3002</li> <li>\u4fee\u6539\u8fd9\u4e2a Key\uff0c\u4fee\u6539\u540d\u5b57\uff0c\u6708\u6d88\u8d39\u989d\u7b49\u3002</li> <li>\u91cd\u7f6e Key\u3002</li> <li>\u7ed9 Key \u5145\u503c\u3002</li> </ul>"},{"location":"zh/user-manual/management/#_4","title":"\u6279\u91cf\u5bfc\u5165\u7528\u6237","text":"<p>\u9700\u8981\u51c6\u5907\u4e00\u4e2a csv \u6587\u4ef6\uff0c\u5217\u5e94\u8be5\u5305\u542b <code>name</code> \u548c <code>email</code> \u4e24\u4e2a\u5b57\u6bb5\u3002</p> <p>\u672c\u9879\u76ee\u76f4\u63a5\u652f\u6301\u4e86 cognito \u7684\u5bfc\u5165\u6a21\u7248\uff0c\u8fd9\u91cc\u662f\u4e00\u4e2a cognito \u7684 excel \u793a\u4f8b\uff0c\u7528\u6237\u7684\u540d\u5b57\u4f1a\u4f18\u5148\u91c7\u7eb3 <code>cognito:username</code>\uff0c\u7136\u540e <code>name</code>\u3002</p> <pre><code>cognito:username,name,given_name,family_name,middle_name,nickname,preferred_username,profile,picture,website,email,email_verified,gender,birthdate,zoneinfo,locale,phone_number,phone_number_verified,address,updated_at,cognito:mfa_enabled\nJohn,,John,Doe,,,,,,,johndoe@example.com,TRUE,,02/01/1985,,,+12345550100,TRUE,123 Any Street,,FALSE\nJane,,Jane,Roe,,,,,,,janeroe@example.com,TRUE,,01/01/1985,,,+12345550199,TRUE,100 Main Street,,FALSE\n</code></pre> <p>Note</p> <p>\u5982\u679c\u60a8\u914d\u7f6e\u4e86 SMTP\uff0c\u5e76\u4e14\u5728 csv \u6587\u4ef6\u91cc\u91cc\u5305\u542b\u4e86\u7528\u6237 email\uff0c\u90a3\u4e48 API key \u4f1a\u76f4\u63a5\u901a\u8fc7\u90ae\u4ef6\u53d1\u9001\u7ed9\u7528\u6237\u3002</p>"},{"location":"zh/user-manual/management/#_5","title":"\u6a21\u578b\u7ba1\u7406","text":"<p>\u5305\u542b\u5982\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>\u521b\u5efa\u6a21\u578b</li> <li>\u4fee\u6539\u6a21\u578b</li> </ul> <p>\u60a8\u7b2c\u4e00\u6b21\u90e8\u7f72 BRConnector \u7684\u65f6\u5019\uff0c\u4f1a\u53d1\u73b0\u7cfb\u7edf\u4ec5\u5185\u7f6e\u4e86 bedrock-converse  \u652f\u6301\u7684\u90e8\u5206\u6a21\u578b\u3002</p> <p>\u4e3a\u4e86\u4f7f\u7528\u65b0\u7684 Provider\uff0c\u60a8\u9700\u8981\u5728\u540e\u53f0\u521b\u5efa\u4e00\u4e2a\u6a21\u578b\u3002</p> <p>\u521b\u5efa\u6a21\u578b\uff0c\u8fdb\u5165 manager \u540e\u53f0\uff0c\u5982\u56fe\uff1a </p> <p>\u6a21\u578b\u8868\u5355\uff1a</p> <p></p> <p>\u6a21\u578b\u7531\u4ee5\u4e0b\u51e0\u4e2a\u5b57\u6bb5\u7ec4\u6210\uff1a</p> Key Type Required Default value Description Name string Y \u6a21\u578b\u7684\u540d\u5b57\uff0c\u8fd9\u4e2a\u540d\u5b57\u4e5f\u662f API \u8c03\u7528\u4e2d\u7684\u6a21\u578b\u540d\u5b57 Provider string Y Privder \u8fd9\u4e2a\u7531 BRConnector \u63d0\u4f9b\u9009\u62e9\u3002 Multiple int N 0 \u5f53\u524d\u6a21\u578b\u662f\u5426\u652f\u6301\u591a\u6a21\u6001\u3002 Prince-In number Y \u8f93\u5165 token \u7684\u4ef7\u683c\u3002\u8fd9\u4e2a\u4ef7\u683c\u60a8\u53ef\u4ee5\u968f\u610f\u5b9a\u4e49\uff0c\u4e3b\u8981\u7528\u4e8e\u63a7\u5236\u672c\u7cfb\u7edf\u7684\u6a21\u578b\u8c03\u7528 Prince-Out number Y \u8f93\u51fa token \u7684\u4ef7\u683c\u3002 Config string(json) N \u6839\u636e\u4e0d\u540c\u7684\u63d0\u4f9b\u5668\u4f1a\u63d0\u4f9b\u4e0d\u540c\u7684\u914d\u7f6e\u3002 <p>Tip</p> <p>\u67d0\u4e9b\u5ba2\u6237\u7aef\u53ef\u80fd\u9650\u5236\u7528\u6237\u81ea\u5b9a\u4e49\u6a21\u578b\u540d\u79f0\u3002\u4e3a\u4e86\u4f7f BRConnector \u80fd\u591f\u54cd\u5e94\u8fd9\u7c7b\u8bf7\u6c42\uff0c\u60a8\u53ef\u4ee5\u91c7\u53d6\u4ee5\u4e0b\u7b56\u7565\uff1a</p> <ol> <li> <p>\u5728\u540e\u53f0\u521b\u5efa\u4e00\u4e2a\u4e0e\u5ba2\u6237\u7aef\u6307\u5b9a\u540d\u79f0\u76f8\u5339\u914d\u7684\u65b0\u6a21\u578b\uff0c\u4ece\u800c\u5c06\u8bf7\u6c42\u8f6c\u53d1\u81f3\u60a8\u7684\u5b9e\u9645\u540e\u7aef\u6a21\u578b\u3002</p> </li> <li> <p>\u53e6\u5916\uff0c\u60a8\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a \u201cdefault\u201d \u7684\u901a\u7528\u6a21\u578b\u3002\u8fd9\u6837\uff0c\u65e0\u8bba\u524d\u7aef\u4f20\u5165\u4f55\u79cd\u6a21\u578b\u540d\u79f0\uff0cBRConnector \u90fd\u80fd\u505a\u51fa\u54cd\u5e94\u3002</p> </li> </ol> <p>\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u786e\u4fdd BRConnector \u5728\u9762\u5bf9\u5404\u79cd\u5ba2\u6237\u7aef\u8bf7\u6c42\u65f6\u4fdd\u6301\u7075\u6d3b\u6027\u548c\u517c\u5bb9\u6027\uff0c\u4ece\u800c\u63d0\u9ad8\u7cfb\u7edf\u7684\u6574\u4f53\u9002\u5e94\u80fd\u529b\u3002</p>"},{"location":"zh/user-manual/management/#_6","title":"\u7ec4\u7ba1\u7406","text":"<p>\u901a\u8fc7\u7ec4\uff0c\u60a8\u53ef\u4ee5\u65b9\u4fbf\u5730\u7ed9\u6a21\u578b\u6388\u6743\u3002</p> <p>\u540c\u65f6 API Keys \u4e5f\u53ef\u4ee5\u5c5e\u4e8e\u67d0\u4e00\u4e2a\u7ec4\u3002</p>"},{"location":"zh/user-manual/management/#_7","title":"\u6a21\u578b\u6388\u6743","text":"<p>\u521b\u5efa\u5b8c\u6a21\u578b\uff0c\u60a8\u9700\u8981\u5c06\u8be5\u6a21\u578b\u6388\u6743\u7ed9\u7ec4\u6216\u8005\u7528\u6237\uff08API Key\uff09\u3002</p> <p>\u5728 API Keys \u7684\u5217\u8868\u9875\u9762\uff0c\u70b9\u51fb Models \u6309\u94ae\u3002</p> <p>\u5728 Groups \u7684\u5217\u8868\u9875\u9762\uff0c\u540c\u6837\u4e5f\u6709 Models \u6309\u94ae\u3002</p> <p>API Keys \u4e0e \u7ec4\u6388\u6743\u7684\u6a21\u578b\u662f \u201c\u5e76\u201d \u7684\u5173\u7cfb\u3002</p>"},{"location":"zh/user-manual/management/#webhoook","title":"Webhoook \u914d\u7f6e","text":"<p>\u5305\u542b\u5982\u4e0b\u529f\u80fd\uff1a</p> <ul> <li>\u6dfb\u52a0\u98de\u4e66\u673a\u5668\u4eba</li> <li>\u4fee\u6539\u98de\u4e66\u673a\u5668\u4eba</li> </ul> <p>\u521b\u5efa\u98de\u4e66\u673a\u5668\u4eba\uff0c\u8fdb\u5165 manager \u540e\u53f0\uff0c\u5982\u56fe\uff1a</p> <p></p> <p>Webhook\u8868\u5355\uff1a</p> <p></p> <p>Webhook\u7531\u4ee5\u4e0b\u51e0\u4e2a\u5b57\u6bb5\u7ec4\u6210\uff1a</p> Key Type Required Default value Description Name string Y Webhook\u7684\u540d\u5b57\uff0c\u8fd9\u4e2a\u540d\u5b57\u4e5f\u51b3\u5b9a\u4e86 Webhook \u7684 URL \u5730\u5740 Provider string Y Privder \u8fd9\u4e2a\u7531 BRConnector \u63d0\u4f9b\u9009\u62e9\u3002 Config string(json) N \u6839\u636e\u4e0d\u540c\u7684\u63d0\u4f9b\u5668\u4f1a\u63d0\u4f9b\u4e0d\u540c\u7684\u914d\u7f6e\u3002"},{"location":"zh/user-manual/management/#config","title":"Config\u6837\u4f8b","text":"<pre><code>{\n  \"appId\": \"cli_xxxxx\",\n  \"apiKey\": \"br-xxxxx\",\n  \"modelId\": \"claude-3-sonnet\",\n  \"appSecret\": \"xxxxx\"\n}\n</code></pre> <ul> <li>appId: \u98de\u4e66\u673a\u5668\u4eba\u7684 app id</li> <li>apiKey: BRConnector \u7528\u6237\u7684 api key\uff0c\u98de\u4e66\u673a\u5668\u4eba\u5c06\u7528\u8fd9\u4e2a api key \u7684\u76f8\u5173\u6743\u9650\u8c03\u7528\u6a21\u578b</li> <li>modelId: BRConnector\u4e2d\u6a21\u578b\u7684\u540d\u5b57</li> <li>appSecret: \u98de\u4e66\u673a\u5668\u4eba\u7684 app secret</li> </ul> <p>Note</p> <p>\u6ce8\u610f\uff1a\u76ee\u524d\u6dfb\u52a0 Webhook \u540e\u5fc5\u987b\u91cd\u542fBRConnector \u624d\u80fd\u751f\u6548\u3002</p> <p>\u914d\u7f6e\u5b8c\u6210\u540e\u7684 Webhook URL \u793a\u4f8b\uff1a</p> <ul> <li><code>https://&lt;yourdomain&gt;/bot/feishu/&lt;webhook-name&gt;/webhook/event</code></li> <li><code>https://www.example.com/bot/feishu/feishu001/webhook/event</code></li> </ul>"},{"location":"zh/user-manual/scenarios/feishu-bot/","title":"\u98de\u4e66\u673a\u5668\u4eba","text":"<p>Since Docker image version 0.0.13</p> <p>Note</p> <p>\u5f53\u524d\u7248\u672c\u4ec5\u652f\u6301\u98de\u4e66\uff0c\u4e0d\u652f\u6301 Lark(\u98de\u4e66\u56fd\u9645\u7248)\u3002</p> <ol> <li> <p>\u4f01\u4e1a\u7ba1\u7406\u5458\u767b\u5f55\u98de\u4e66\u5f00\u653e\u5e73\u53f0</p> </li> <li> <p>\u521b\u5efa\u4f01\u4e1a\u81ea\u5efa\u5e94\u7528 </p> </li> <li> <p>\u586b\u5199\u540d\u5b57\u548c\u63cf\u8ff0 </p> </li> <li> <p>\u6dfb\u52a0<code>\u673a\u5668\u4eba</code>\u80fd\u529b </p> </li> <li> <p>\u5728\u673a\u5668\u4eba\u914d\u7f6e\u9875\u9762\u4e2d\uff0c\u70b9\u51fb<code>\u4e8b\u4ef6\u4e0e\u56de\u8c03</code> </p> </li> <li> <p>\u7f16\u8f91<code>\u8ba2\u9605\u65b9\u5f0f</code>\uff0c\u4fee\u6539\u8bf7\u6c42\u5730\u5740\u3002\u8bf7\u6c42\u5730\u5740\u548c\u670d\u52a1\u7aef\u914d\u7f6e\u7684 webhook \u540d\u5b57\u6709\u5173\uff0c\u5f62\u5982\uff1a<code>https://&lt;yourdomain&gt;/bot/feishu/&lt;webhook-name&gt;/webhook/event</code>\u3002\u5177\u4f53\u5730\u5740\u53c2\u8003[webhoook-\u914d\u7f6e]\u3002(management.zh.md#webhoook-\u914d\u7f6e) </p> </li> <li> <p>\u6dfb\u52a0\u6743\u9650 </p> </li> <li> <p>\u7136\u540e\u5728\u98de\u4e66\u4e2d\u5207\u6362\u5230\u5bf9\u5e94\u4f01\u4e1a\uff0c\u641c\u7d22\u5e94\u7528\uff08\u6b65\u9aa4 3 \u4e2d\u7684\u5e94\u7528\u540d\uff09 </p> </li> <li> <p>\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u6d4b\u8bd5\u53d1\u9001\u95ee\u9898\uff0c\u8ba9\u5927\u9884\u8a00\u6a21\u578b\u6765\u56de\u7b54\u4e86 </p> </li> </ol>"},{"location":"zh/user-manual/scenarios/sample-client-for-bedrock/#_1","title":"\u7b80\u4ecb","text":"<p>Sample client for Bedrock (BRClient) \u662f\u4e00\u4e2a\u6837\u4f8b\u9879\u76ee\uff0c\u7528\u4e8e\u5c55\u793a\u5982\u4f55\u6784\u5efa\u4e00\u4e2a\u8fde\u63a5 Bedrock \u5927\u8bed\u8a00\u6a21\u578b\u7684\u5ba2\u6237\u7aef\u3002</p> <p>\u4ed6\u9664\u4e86\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u76f4\u63a5\u53d1\u8d77\u5bf9 Bedrock \u7684\u8c03\u7528\uff0c\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u672c\u9879\u76ee(BRConnector)\u6210\u4e3a\u4ed6\u7684 API \u540e\u7aef\u3002</p> <p>\u9879\u76ee\u5730\u5740: aws-samples/sample-client-for-amazon-bedrock</p>"},{"location":"zh/user-manual/scenarios/sample-client-for-bedrock/#_2","title":"\u5feb\u901f\u542f\u52a8","text":"<p>\u60a8\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u6e90\u4ee3\u7801\u542f\u52a8 BRClient\uff0c\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u5404\u4e2a\u5e73\u53f0\u7684\u5b89\u88c5\u7a0b\u5e8f\u3002</p> <p>\u5982\u679c\u60a8\u90e8\u7f72\u4e86\u672c\u9879\u76ee\uff08BRConnector\uff09\uff0c\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u8fd9\u4e2a URL \u542f\u52a8\uff1ahttp(s)://your-endpoint/brclient/\u3002</p>"},{"location":"zh/user-manual/scenarios/sample-client-for-bedrock/#_3","title":"\u8bbe\u7f6e","text":"<p>\u8fdb\u5165 Web \u754c\u9762\u540e\uff0c\u60a8\u9700\u8981\u5728\u8bbe\u7f6e\u4e2d\u542f\u7528 BRConnector\u3002</p> <p></p> <p>\u5176\u4e2d BRConnector Endpoint \u586b\u5199\u60a8\u7684 BRConnector \u7684\u8def\u5f84\u7684\u6839\u5373\u53ef\u3002</p> <p>API Key \u586b\u5199 BRConnector \u9881\u53d1\u7684 Key\u3002</p> <p>\u8bbe\u7f6e\u597d\u4e4b\u540e\uff0c\u60a8\u53ef\u4ee5\u5237\u65b0\u9875\u9762\uff0c\u4ece BRConnector \u4e2d\u83b7\u53d6\u6a21\u578b\u5217\u8868\u3002\u4ee5\u540e\u6bcf\u6b21\u8bbe\u7f6e\u597d\u65b0\u7684\u6a21\u578b\u540e\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u5237\u65b0\u9875\u9762\u83b7\u53d6\u65b0\u6a21\u578b\u7684\u5217\u8868\u3002</p>"},{"location":"zh/user-manual/scenarios/vscode-plugin-cline/","title":"vscode-plugin-cline","text":"<ul> <li> <p>\u5728 vscode \u4e2d\u5b89\u88c5 cline \u63d2\u4ef6 </p> </li> <li> <p>\u914d\u7f6e\u63d2\u4ef6 </p> </li> </ul>"},{"location":"zh/user-manual/scenarios/vscode-plugin-continue/","title":"vscode-plugin-continue","text":"<ul> <li> <p>\u5728 vscode \u4e2d\u5b89\u88c5 continue \u63d2\u4ef6 </p> </li> <li> <p>\u914d\u7f6e continue \u63d2\u4ef6 <code>~/.continue/config.json</code></p> </li> <li>\u914d\u7f6e chat api <pre><code>{\n  \"models\": [\n    {\n      \"title\": \"OpenAI-compatible\",\n      \"provider\": \"openai\",\n      \"model\": \"coding\",\n      \"apiKey\": \"br-xxxxxxxx\",\n      \"apiBase\": \"https://xxxxxx/v1\"\n    },\n    ...\n  ]\n  ...\n</code></pre></li> <li> <p>\u914d\u7f6e completion api <pre><code>{\n  ...\n  \"tabAutocompleteModel\": {\n    \"title\": \"Any-title\",\n    \"model\": \"coding\",\n    \"apiKey\": \"br-xxxxxxxxxxxx\",\n    \"contextLength\": 4000,\n    \"apiBase\": \"https://xxxxxxxxxxxxxxxxx/v1\",\n    \"provider\": \"openai\"\n  },\n  \"tabAutocompleteOptions\": {\n    \"debounceDelay\": 1000,\n    \"multilineCompletions\": \"always\"\n  },\n  ...\n}\n</code></pre></p> </li> <li> <p>\u4e3a continue \u63d2\u4ef6\u914d\u7f6e\u4e13\u7528\u7684 provider </p> <ul> <li>continue_coder</li> </ul> </li> </ul>"}]}